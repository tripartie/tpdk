# coding: utf-8

"""
    Tripartie

    Our API suite for the **Resolution Center** and the **Safe Checkout** features. Simple, yet elegant web interfaces for your convenience. One request away from your first automated resolution or safe-checkout.  # noqa: E501

    The version of the OpenAPI document: 2.0.22
    Contact: noc@tripartie.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import tpdk
from tpdk.models.user_collection_read import UserCollectionRead  # noqa: E501
from tpdk.rest import ApiException

class TestUserCollectionRead(unittest.TestCase):
    """UserCollectionRead unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UserCollectionRead
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserCollectionRead`
        """
        model = tpdk.models.user_collection_read.UserCollectionRead()  # noqa: E501
        if include_optional :
            return UserCollectionRead(
                id = '', 
                first_name = 'Jacob', 
                last_name = 'TAHRI', 
                public_name = 'Nickname', 
                role_in_company = 'Accounting Dpt', 
                email = 'john.doe@company.tld', 
                roles = ["ROLE_ORGANIZATION_OWNER"], 
                intl_phone_number = '+33700000000', 
                last_successful_log_in = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                avatar = None, 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                organization = None
            )
        else :
            return UserCollectionRead(
                roles = ["ROLE_ORGANIZATION_OWNER"],
        )
        """

    def testUserCollectionRead(self):
        """Test UserCollectionRead"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
