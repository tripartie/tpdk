openapi: 3.0.0
info:
  title: Tripartie
  description: |-
    Our API suite for the **Resolution Center** and the **Safe Checkout** features.
    Simple, yet elegant web interfaces for your convenience. One request away from your first automated resolution or safe-checkout.
  contact:
    name: Tripartie SAS
    url: https://tripartie.com
    email: noc@tripartie.com
  version: 2.0.0.b1
servers:
  - url: https://staging-api.tripartie.com
    description: Sandbox
  - url: https://api.tripartie.com
    description: Production
  - url: https://api.tripartie.dev
    description: Development
paths:
  /disputes:
    get:
      operationId: api_disputes_get_collection
      tags:
        - Resolution-Center
      responses:
        '200':
          description: Dispute collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dispute-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of Dispute resources.
      description: Retrieves the collection of Dispute resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: order[createdAt]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: order[status]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: order[updatedAt]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: transaction.offer.title
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: status
          in: query
          description: Filter on a limited subset of status
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - CREATED
              - SUBMITTED
              - OPENED
              - ABANDONED
              - PENDING
              - OBJECTED
              - SHIPPED
              - IN_TRANSIT
              - RETURNED
              - DISMISSED
              - RESOLVED
            type: string
          style: form
          explode: false
          allowReserved: false
          example: CREATED
        - name: transaction.status
          in: query
          description: Filter on a limited subset of transaction.status
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - CREATED
              - AUTHORIZED
              - REFUSED
              - ACCEPTED
              - SHIPPED
              - IN_TRANSIT
              - DELIVERED
              - COMPLETED
              - DISPUTED
            type: string
          style: form
          explode: false
          allowReserved: false
          example: CREATED
        - name: exists[recommendedSolution]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        - name: exists[chosenSolution]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        - name: exists[counterSolution]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        - name: exists[platformSolution]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        - name: metadata[]
          in: query
          description: Flattened OrderedMap for metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: transaction.metadata[]
          in: query
          description: Flattened OrderedMap for transaction.metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: transaction.offer.metadata[]
          in: query
          description: Flattened OrderedMap for transaction.offer.metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
      deprecated: false
      security:
        - oauth:
            - DISPUTE_READ
    post:
      operationId: api_disputes_post
      tags:
        - Resolution-Center
      responses:
        '201':
          description: Dispute resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-PostCreationRead'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Draft a standalone Dispute
      description: |-
        Create a draft dispute to be filled by an alleged aggrieved customer.
        Do not use that endpoint if the transaction took place using our safe-checkout tunnel.
        This endpoint return a unique URL that can be accessed by both the complainant and seller (if individual).

        **Note:** You can generate at your own discretion tokens for both parties, thus avoiding the secondary authentication.
      parameters: []
      requestBody:
        description: The new Dispute resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute-IndependentWrite'
        required: true
      deprecated: false
      security:
        - oauth:
            - DISPUTE_WRITE
    parameters: []
  /disputes/{ulid}:
    get:
      operationId: api_disputes_ulid_get
      tags:
        - Resolution-Center
      responses:
        '200':
          description: Dispute resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Dispute resource.
      description: Retrieves a Dispute resource.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - DISPUTE_READ
    delete:
      operationId: api_disputes_ulid_delete
      tags:
        - Resolution-Center
      responses:
        '204':
          description: Dispute resource deleted
        '404':
          description: Resource not found
      summary: Abandon claims on Dispute
      description: '**Only the buyer/complainant** can dismiss the case immediately. Otherwise, the support can but in a limited ranges of Dispute status.'
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - DISPUTE_WRITE
    patch:
      operationId: api_disputes_ulid_patch
      tags:
        - Resolution-Center
      responses:
        '200':
          description: Dispute resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Updates the Dispute resource.
      description: Updates the Dispute resource.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Dispute resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute-Update'
        required: true
      deprecated: false
    parameters: []
  /disputes/{ulid}/evaluations:
    post:
      operationId: api_disputes_ulidevaluations_post
      tags:
        - Resolution-Center
      responses:
        '201':
          description: Evaluation resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Submit an Evaluation for the Dispute
      description: '**Only authenticated** complainant and seller **CAN** issue an evaluation **WHEN** the dispute reached a final state.'
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Evaluation resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-Write'
        required: true
      deprecated: false
    parameters: []
  /disputes/{ulid}/evidences:
    get:
      operationId: api_disputes_ulidevidences_get_collection
      tags:
        - Resolution-Center
      responses:
        '200':
          description: Evidence collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evidence-Read'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieve all Evidences in Dispute
      description: Retrieves the collection of Evidence resources.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_disputes_ulidevidences_post
      tags:
        - Resolution-Center
      responses:
        '201':
          description: Evidence resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Submit an Evidence to the Dispute case
      description: This action does not held the actual upload, you will have to do the upload in a dedicated request.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Evidence resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evidence-Write'
        required: true
      deprecated: false
    parameters: []
  /disputes/{ulid}/evidences/{id}:
    delete:
      operationId: api_disputes_ulidevidences_id_delete
      tags:
        - Resolution-Center
      responses:
        '204':
          description: Evidence resource deleted
        '404':
          description: Resource not found
      summary: Withdraw an Evidence from a Dispute
      description: Removes the Evidence resource.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Evidence identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /disputes/{ulid}/evidences/{id}/media:
    post:
      operationId: api_disputes_ulidevidences_idmedia_post
      tags:
        - Resolution-Center
      responses:
        '201':
          description: Media resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Upload attachment in regard of described Evidence
      description: Creates a Media resource.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Evidence identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The binary media file as-is
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      deprecated: false
    parameters: []
  /disputes/{ulid}/parcels:
    get:
      operationId: api_disputes_ulidparcels_get_collection
      tags:
        - Resolution-Center
      responses:
        '200':
          description: Parcel collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parcel-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of Parcel resources.
      description: Retrieves the collection of Parcel resources.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_disputes_ulidparcels_post
      tags:
        - Resolution-Center
      responses:
        '201':
          description: Parcel resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Creates a Parcel resource.
      description: Creates a Parcel resource.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Parcel resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parcel-Write'
        required: true
      deprecated: false
    parameters: []
  /disputes/{ulid}/parcels/{id}:
    delete:
      operationId: api_disputes_ulidparcels_id_delete
      tags:
        - Resolution-Center
      responses:
        '204':
          description: Parcel resource deleted
        '404':
          description: Resource not found
      summary: Removes the Parcel resource.
      description: Removes the Parcel resource.
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Parcel identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /offers:
    get:
      operationId: api_offers_get_collection
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Offer collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Read issued Offers
      description: Retrieves the collection of Offer resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: title
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: publicUrl
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: publicUrl[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: unitPrice
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: number
          style: form
          explode: false
          allowReserved: false
        - name: unitPrice[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: number
          style: form
          explode: true
          allowReserved: false
        - name: itemCount
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        - name: itemCount[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        - name: createdAt[before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: metadata[]
          in: query
          description: Flattened OrderedMap for metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: offer.metadata[]
          in: query
          description: Flattened OrderedMap for offer.metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: nature
          in: query
          description: Filter on a limited subset of nature
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - service
              - physical_item
              - dematerialized_item
              - rent_item
            type: string
          style: form
          explode: false
          allowReserved: false
          example: service
        - name: condition
          in: query
          description: Filter on a limited subset of condition
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - NEW
              - USED
              - DAMAGED
              - DETERIORATED
              - UNRECOVERABLE
            type: string
          style: form
          explode: false
          allowReserved: false
          example: NEW
        - name: shippingAllowed
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - OFFER_READ
    post:
      operationId: api_offers_post
      tags:
        - Safe-Checkout
      responses:
        '201':
          description: Offer resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-PostCreationRead'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Create an Offer and retrieve url
      description: Publish an offer so that you can safely retrieve a safe-checkout unique link from us
      parameters: []
      requestBody:
        description: The new Offer resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-IndependentWrite'
        required: true
      deprecated: false
      security:
        - oauth:
            - OFFER_WRITE
    parameters: []
  /offers/{ulid}:
    get:
      operationId: api_offers_ulid_get
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Offer resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-Read'
        '404':
          description: Resource not found
      summary: Read an Offer
      description: Retrieves a Offer resource.
      parameters:
        - name: ulid
          in: path
          description: Offer identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - OFFER_READ
    parameters: []
  /offers/{ulid}/medias:
    post:
      operationId: api_offers_ulidmedias_post
      tags:
        - Safe-Checkout
        - Resolution-Center
      responses:
        '201':
          description: Media resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Upload a picture for a given Offer
      description: Creates a Media resource.
      parameters:
        - name: ulid
          in: path
          description: Offer identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The binary media file as-is
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      deprecated: false
    parameters: []
  /offers/{ulid}/medias/{id}:
    delete:
      operationId: api_offers_ulidmedias_id_delete
      tags:
        - Safe-Checkout
      responses:
        '204':
          description: Media resource deleted
        '404':
          description: Resource not found
      summary: Removes the Media resource.
      description: Removes the Media resource.
      parameters:
        - name: ulid
          in: path
          description: Offer identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Media identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /offers/{ulid}/transactions:
    get:
      operationId: api_offers_ulidtransactions_get_collection
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Transaction collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieve Payment Intents for Offer
      description: Retrieves the collection of Transaction resources.
      parameters:
        - name: ulid
          in: path
          description: Offer identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: order[status]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: metadata[]
          in: query
          description: Flattened OrderedMap for metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: status
          in: query
          description: Filter on a limited subset of status
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - CREATED
              - AUTHORIZED
              - REFUSED
              - ACCEPTED
              - SHIPPED
              - IN_TRANSIT
              - DELIVERED
              - COMPLETED
              - DISPUTED
            type: string
          style: form
          explode: false
          allowReserved: false
          example: CREATED
        - name: exists[dispute]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_offers_ulidtransactions_post
      tags:
        - Safe-Checkout
      responses:
        '201':
          description: Transaction resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Create a Payment Intent for Offer
      description: Cannot be used outside of a Persona (buyer)
      parameters:
        - name: ulid
          in: path
          description: Offer identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Transaction resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      deprecated: false
    parameters: []
  /offers/{ulid}/transactions/{id}/evaluations:
    post:
      operationId: api_offers_ulidtransactions_idevaluations_post
      tags:
        - Safe-Checkout
      responses:
        '201':
          description: Evaluation resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Submit an Evaluation for the Offer
      description: '**Only authenticated** buyer and seller **CAN** issue an evaluation **WHEN** the transaction reached a final state.'
      parameters:
        - name: ulid
          in: path
          description: Dispute identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Evaluation resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-Write'
        required: true
      deprecated: false
    parameters: []
  /organizations/{id}:
    patch:
      operationId: api_organizations_id_patch
      tags:
        - Branding
        - User
      responses:
        '200':
          description: Organization resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Update your Organization details, branding or parameters
      description: Updates the Organization resource.
      parameters:
        - name: id
          in: path
          description: Organization identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Organization resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-Update'
        required: true
      deprecated: false
      security:
        - oauth:
            - ORGANIZATION_WRITE
    parameters: []
  /organizations/{id}/icon:
    post:
      operationId: api_organizations_idicon_post
      tags:
        - Branding
      responses:
        '201':
          description: Media resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Upload your Organization Icon
      description: Creates a Media resource.
      parameters:
        - name: id
          in: path
          description: Organization identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The binary media file as-is
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      deprecated: false
    delete:
      operationId: api_organizations_idicon_delete
      tags:
        - Branding
      responses:
        '204':
          description: Media resource deleted
        '404':
          description: Resource not found
      summary: Unset your Organization Icon
      description: Removes the Media resource.
      parameters:
        - name: id
          in: path
          description: Organization identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /organizations/{id}/logo:
    post:
      operationId: api_organizations_idlogo_post
      tags:
        - Branding
      responses:
        '201':
          description: Media resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Upload your Organization logo
      description: Creates a Media resource.
      parameters:
        - name: id
          in: path
          description: Organization identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The binary media file as-is
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      deprecated: false
    delete:
      operationId: api_organizations_idlogo_delete
      tags:
        - Branding
      responses:
        '204':
          description: Media resource deleted
        '404':
          description: Resource not found
      summary: Unset your Organization Logo
      description: Removes the Media resource.
      parameters:
        - name: id
          in: path
          description: Organization identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /personas:
    get:
      operationId: api_personas_get_collection
      tags:
        - Persona
      responses:
        '200':
          description: Persona collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Persona-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of Persona resources.
      description: Retrieves the collection of Persona resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: firstName
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: lastName
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: dateOfBirth
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: dateOfBirth[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: email
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: mobilePhoneNumber
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: mobilePhoneNumber[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: gender
          in: query
          description: Filter on a limited subset of gender
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - MALE
              - FEMALE
              - OTHER
              - RATHER_NOT_SAY
            type: string
          style: form
          explode: false
          allowReserved: false
          example: MALE
        - name: order[createdAt]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: metadata[]
          in: query
          description: Flattened OrderedMap for metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
      deprecated: false
      security:
        - oauth:
            - PERSONA_READ
    post:
      operationId: api_personas_post
      tags:
        - Persona
      responses:
        '201':
          description: Persona resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Register a Persona (Your customer)
      description: |-
        You should not register your whole database of users, only those who are concerned by a Safe-checkout or Dispute operation.
        One Persona entry for your organization can be assigned as a seller or buyer.

        **Notes:**
          - (i) There is a unique constraint for the mobile phone numbers and email.
          - (ii) You will have to issue a DELETE operation on a Persona that withhold a specific phone number or email.
          - (iii) You are NOT REQUIRED to provide email OR a mobile phone number but it is highly recommended, if none provided the email will be generated as '{ulid}@your-domain.tld'. In that case, please specify at least one metadata in order to find your entry with ease.
      parameters: []
      requestBody:
        description: The new Persona resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Write'
        required: true
      deprecated: false
      security:
        - oauth:
            - PERSONA_WRITE
    parameters: []
  /personas/authentication:
    post:
      operationId: api_personasauthentication_post
      tags:
        - User
      responses:
        '201':
          description: Persona resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Persona Authentication
      description: Main route for Persona (Organization customers) to authenticate themselves. Public access, captcha protected and MFA mandatory.
      parameters: []
      requestBody:
        description: The new Persona resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona'
        required: true
      deprecated: false
    parameters: []
  /personas/register:
    post:
      operationId: api_personasregister_post
      tags:
        - User
      responses:
        '201':
          description: Persona resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
      summary: Persona external registration
      description: Creates a Persona resource.
      parameters: []
      requestBody:
        description: The new Persona resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Register'
        required: true
      deprecated: false
    parameters: []
  /personas/{id}:
    get:
      operationId: api_personas_id_get
      tags:
        - Persona
      responses:
        '200':
          description: Persona resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
        '404':
          description: Resource not found
      summary: Retrieves a Persona resource.
      description: Retrieves a Persona resource.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - PERSONA_READ
    delete:
      operationId: api_personas_id_delete
      tags:
        - Persona
      responses:
        '204':
          description: Persona resource deleted
        '404':
          description: Resource not found
      summary: Unregister a Persona (Your customer)
      description: |-
        You **MAY** unregister (or free the email/phone number) your Persona entry using that endpoint.
        *Please note that* this operation will fail if that Persona have any ongoing operations.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - PERSONA_WRITE
    patch:
      operationId: api_personas_id_patch
      tags:
        - Persona
      responses:
        '200':
          description: Persona resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Updates the Persona resource.
      description: Update your Persona (eg. your customer/user entry) through that API call. _Beware that updating_ **email** and/or the **mobile phone number** must be done using non reserved values. Otherwise this operation will be rejected.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Persona resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Update'
        required: true
      deprecated: false
      security:
        - oauth:
            - PERSONA_WRITE
    parameters: []
  /personas/{id}/notifications:
    get:
      operationId: api_personas_idnotifications_get_collection
      tags:
        - Notification
      responses:
        '200':
          description: Notification collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of Notification resources.
      description: Retrieves the collection of Notification resources.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /personas/{id}/offers:
    get:
      operationId: api_personas_idoffers_get_collection
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Offer collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: List or Search Offers for given Persona
      description: Retrieves the collection of Offer resources.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: title
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: publicUrl
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: publicUrl[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        - name: unitPrice
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: number
          style: form
          explode: false
          allowReserved: false
        - name: unitPrice[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: number
          style: form
          explode: true
          allowReserved: false
        - name: itemCount
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        - name: itemCount[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        - name: createdAt[before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_before]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: createdAt[strictly_after]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: metadata[]
          in: query
          description: Flattened OrderedMap for metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: offer.metadata[]
          in: query
          description: Flattened OrderedMap for offer.metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: nature
          in: query
          description: Filter on a limited subset of nature
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - service
              - physical_item
              - dematerialized_item
              - rent_item
            type: string
          style: form
          explode: false
          allowReserved: false
          example: service
        - name: condition
          in: query
          description: Filter on a limited subset of condition
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - NEW
              - USED
              - DAMAGED
              - DETERIORATED
              - UNRECOVERABLE
            type: string
          style: form
          explode: false
          allowReserved: false
          example: NEW
        - name: shippingAllowed
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - OFFER_READ
    post:
      operationId: api_personas_idoffers_post
      tags:
        - Safe-Checkout
      responses:
        '201':
          description: Offer resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-PostCreationRead'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Create an Offer for given Persona
      description: Creates a Offer resource.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Offer resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-Write'
        required: true
      deprecated: false
      security:
        - oauth:
            - OFFER_WRITE
    delete:
      operationId: api_personas_idoffers_delete
      tags:
        - Safe-Checkout
      responses:
        '204':
          description: Offer resource deleted
        '404':
          description: Resource not found
      summary: Revoke an Offer for given Persona
      description: That goes without says, if that **Offer** have a _Transaction_ **that is ongoing**, you **MAY NOT** revoke the **Offer**.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - OFFER_WRITE
    patch:
      operationId: api_personas_idoffers_patch
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Offer resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Update an Offer for given Persona
      description: Updates the Offer resource.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Offer resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer-Update'
        required: true
      deprecated: false
      security:
        - oauth:
            - OFFER_WRITE
    parameters: []
  /personas/{id}/token:
    post:
      operationId: api_personas_idtoken_post
      tags:
        - Persona
      responses:
        '201':
          description: Persona resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-PostAuthRead'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Issue authenticated URL for single end-user
      description: Without this, your users may be required to pass a MFA challenge even if they are already logged-in from your website. Pass the URL you wish your user access, either a Dispute or Safe-checkout resource.
      parameters:
        - name: id
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Persona resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Write'
        required: true
      deprecated: false
      security:
        - oauth:
            - PERSONA_AUTH
    parameters: []
  /personas/{personaId}/notifications/{id}:
    patch:
      operationId: api_personas_personaIdnotifications_id_patch
      tags:
        - Notification
      responses:
        '200':
          description: Notification resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Updates the Notification resource.
      description: Updates the Notification resource.
      parameters:
        - name: personaId
          in: path
          description: Persona identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Notification identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Notification resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      deprecated: false
    parameters: []
  /register:
    post:
      operationId: api_register_post
      tags:
        - User
      responses:
        '201':
          description: User resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Organization onboarding
      description: Internal-use only, protected by a captcha. Organization first-enrollment
      parameters: []
      requestBody:
        description: The new User resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Write'
        required: true
      deprecated: false
    parameters: []
  /transactions:
    get:
      operationId: api_transactions_get_collection
      tags:
        - Transaction
      responses:
        '200':
          description: Transaction collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of Transaction resources.
      description: Retrieves the collection of Transaction resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: order[status]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        - name: metadata[]
          in: query
          description: Flattened OrderedMap for metadata. Must be a multiple of two items count. Explicitly set "null" for desired value.
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            items:
              type: string
            type: array
          style: deepObject
          explode: true
          allowReserved: false
          example:
            - External-ID
            - 1254A
        - name: status
          in: query
          description: Filter on a limited subset of status
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - CREATED
              - AUTHORIZED
              - REFUSED
              - ACCEPTED
              - SHIPPED
              - IN_TRANSIT
              - DELIVERED
              - COMPLETED
              - DISPUTED
            type: string
          style: form
          explode: false
          allowReserved: false
          example: CREATED
        - name: exists[dispute]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /transactions/{ulid}/dispute:
    get:
      operationId: api_transactions_uliddispute_get
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Dispute resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-Read'
        '404':
          description: Resource not found
      summary: Read Dispute from existing Transaction
      description: Retrieves a Dispute resource.
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - DISPUTE_READ
    post:
      operationId: api_transactions_uliddispute_post
      tags:
        - Safe-Checkout
      responses:
        '201':
          description: Dispute resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-PostCreationRead'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Open a Dispute related to existing Transaction
      description: Creates a Dispute resource.
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Dispute resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute-Write'
        required: true
      deprecated: false
      security:
        - oauth:
            - DISPUTE_WRITE
    delete:
      operationId: api_transactions_uliddispute_delete
      tags:
        - Safe-Checkout
      responses:
        '204':
          description: Dispute resource deleted
        '404':
          description: Resource not found
      summary: Abandon claims on Dispute
      description: '**Only the buyer/complainant** can dismiss the case immediately. Otherwise, the support can but in a limited ranges of Dispute status.'
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
      security:
        - oauth:
            - DISPUTE_WRITE
    patch:
      operationId: api_transactions_uliddispute_patch
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Dispute resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Interact with a Dispute
      description: Only authenticated Persona can interact with a Dispute object. Usually through our web application.
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Dispute resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute-Update'
        required: true
      deprecated: false
      security:
        - personaAuthKey: []
    parameters: []
  /transactions/{ulid}/parcels:
    get:
      operationId: api_transactions_ulidparcels_get_collection
      tags:
        - Safe-Checkout
      responses:
        '200':
          description: Parcel collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parcel-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Read shipments from Transaction
      description: Retrieves the collection of Parcel resources.
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_transactions_ulidparcels_post
      tags:
        - Safe-Checkout
      responses:
        '201':
          description: Parcel resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Manually declare package shipped for Transaction
      description: Creates a Parcel resource.
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The new Parcel resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parcel-Write'
        required: true
      deprecated: false
    parameters: []
  /transactions/{ulid}/parcels/{id}:
    delete:
      operationId: api_transactions_ulidparcels_id_delete
      tags:
        - Safe-Checkout
      responses:
        '204':
          description: Parcel resource deleted
        '404':
          description: Resource not found
      summary: Withdraw shipment from Transaction
      description: No one except the support can do that manoeuvre.
      parameters:
        - name: ulid
          in: path
          description: Transaction identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Parcel identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: api_users_get_collection
      tags:
        - User
      responses:
        '200':
          description: User collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-SupportRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of User resources.
      description: Retrieves the collection of User resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users/{id}:
    get:
      operationId: api_users_id_get
      tags:
        - User
      responses:
        '200':
          description: User resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Resource not found
      summary: Retrieves a User resource.
      description: Retrieves a User resource.
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users/{id}/email-validation:
    patch:
      operationId: api_users_idemail-validation_patch
      tags:
        - User
      responses:
        '200':
          description: User resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Validate email ownership
      description: Updates the User resource.
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated User resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-EmailValidationWrite'
        required: true
      deprecated: false
    parameters: []
  /users/{id}/notifications:
    get:
      operationId: api_users_idnotifications_get_collection
      tags:
        - Notification
      responses:
        '200':
          description: Notification collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification-Read'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of Notification resources.
      description: Retrieves the collection of Notification resources.
      parameters:
        - name: id
          in: path
          description: User identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users/{userId}/notifications/{id}:
    patch:
      operationId: api_users_userIdnotifications_id_patch
      tags:
        - Notification
      responses:
        '200':
          description: Notification resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Updates the Notification resource.
      description: Updates the Notification resource.
      parameters:
        - name: userId
          in: path
          description: User identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
        - name: id
          in: path
          description: Notification identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated Notification resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification-Update'
        required: true
      deprecated: false
    parameters: []
  /webhook-histories:
    get:
      operationId: api_webhook-histories_get_collection
      tags:
        - Webhook
      responses:
        '200':
          description: WebhookHistory collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookHistory-CollectionRead'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of WebhookHistory resources.
      description: Retrieves the collection of WebhookHistory resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: event
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        - name: event[]
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    parameters: []
  /webhook-histories/{id}:
    get:
      operationId: api_webhook-histories_id_get
      tags:
        - Webhook
      responses:
        '200':
          description: WebhookHistory resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookHistory-Read'
        '404':
          description: Resource not found
      summary: Retrieves a WebhookHistory resource.
      description: Retrieves a WebhookHistory resource.
      parameters:
        - name: id
          in: path
          description: WebhookHistory identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_webhook-histories_id_put
      tags:
        - Webhook
      responses:
        '200':
          description: WebhookHistory resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookHistory-Read'
          links: {}
        '400':
          description: Invalid input
        '404':
          description: Resource not found
        '422':
          description: Unprocessable entity
      summary: Replay a Webhook that ended in failure
      description: Replaces the WebhookHistory resource.
      parameters:
        - name: id
          in: path
          description: WebhookHistory identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: The updated WebhookHistory resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookHistory'
        required: true
      deprecated: false
    parameters: []
  /webhook-subscriptions:
    get:
      operationId: api_webhook-subscriptions_get_collection
      tags:
        - Webhook
      responses:
        '200':
          description: WebhookSubscription collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookSubscription-Read'
          headers:
            Content-Range:
              description: HTTP standardized header for partial content, used for the pagination
              schema:
                type: string
                example: 0-50/28441
      summary: Retrieves the collection of WebhookSubscription resources.
      description: Retrieves the collection of WebhookSubscription resources.
      parameters:
        - name: page
          in: query
          description: The collection page number
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        - name: event
          in: query
          description: Filter on a limited subset of event
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            enum:
              - dispute.opened
              - dispute.submitted
              - dispute.created
              - dispute.abandoned
              - dispute.settlement
              - dispute.closed
              - dispute.manual_arbitration_required
              - dispute.updated
              - offer.created
              - offer.expired
              - offer.updated
              - offer.crawl_failure
              - offer.transaction.authorized
              - offer.transaction.reconciled
              - offer.transaction.abandoned
              - offer.closed
              - offer.transaction.refund
              - persona.added
            type: string
          style: form
          explode: false
          allowReserved: false
          example: dispute.opened
      deprecated: false
    post:
      operationId: api_webhook-subscriptions_post
      tags:
        - Webhook
      responses:
        '201':
          description: WebhookSubscription resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscription-Read'
          links: {}
        '400':
          description: Invalid input
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
      summary: Subscribe to Event(s)
      description: Creates a WebhookSubscription resource.
      parameters: []
      requestBody:
        description: The new WebhookSubscription resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscription-Write'
        required: true
      callbacks:
        onData:
          '{$request.body#/callbackUrl}':
            post:
              description: |-
                The received payload MUST be verified using hmac-sha256.
                                            The actual checksum/sha256 to match is located in X-Tripartie-Signature header.
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Webhook'
              responses:
                '200':
                  description: Your endpoint MUST respond with ANY successful http code in the 2XX range. Will be re-sent up to 8 times otherwise.
      deprecated: false
    parameters: []
  /webhook-subscriptions/{id}:
    delete:
      operationId: api_webhook-subscriptions_id_delete
      tags:
        - Webhook
      responses:
        '204':
          description: WebhookSubscription resource deleted
        '404':
          description: Resource not found
      summary: Removes the WebhookSubscription resource.
      description: Removes the WebhookSubscription resource.
      parameters:
        - name: id
          in: path
          description: WebhookSubscription identifier
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Address:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        companyName:
          example: Company Tld
          type: string
          nullable: true
        countryCode:
          example: FRA
          type: string
          nullable: true
        zipCode:
          example: '75004'
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          type: string
          nullable: true
        buildingName:
          example: Electron
          type: string
          nullable: true
        buildingFloor:
          example: Third floor
          type: string
          nullable: true
        gateOrPortalOrInboxCode:
          example: '3124'
          type: string
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Address-IndependentWrite:
      type: object
      description: ''
      deprecated: false
      properties:
        companyName:
          example: Company Tld
          type: string
          nullable: true
        countryCode:
          example: FRA
          type: string
          nullable: true
        zipCode:
          example: '75004'
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          type: string
          nullable: true
        buildingName:
          example: Electron
          type: string
          nullable: true
        buildingFloor:
          example: Third floor
          type: string
          nullable: true
        gateOrPortalOrInboxCode:
          example: '3124'
          type: string
          nullable: true
    Address-Read:
      type: object
      description: ''
      deprecated: false
      properties:
        companyName:
          example: Company Tld
          type: string
          nullable: true
        countryCode:
          example: FRA
          type: string
          nullable: true
        zipCode:
          example: '75004'
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          type: string
          nullable: true
        buildingName:
          example: Electron
          type: string
          nullable: true
        buildingFloor:
          example: Third floor
          type: string
          nullable: true
        gateOrPortalOrInboxCode:
          example: '3124'
          type: string
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Address-Update:
      type: object
      description: ''
      deprecated: false
      properties:
        companyName:
          example: Company Tld
          type: string
          nullable: true
        countryCode:
          example: FRA
          type: string
          nullable: true
        zipCode:
          example: '75004'
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          type: string
          nullable: true
        buildingName:
          example: Electron
          type: string
          nullable: true
        buildingFloor:
          example: Third floor
          type: string
          nullable: true
        gateOrPortalOrInboxCode:
          example: '3124'
          type: string
          nullable: true
    Address-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        companyName:
          example: Company Tld
          type: string
          nullable: true
        countryCode:
          example: FRA
          type: string
          nullable: true
        zipCode:
          example: '75004'
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          type: string
          nullable: true
        buildingName:
          example: Electron
          type: string
          nullable: true
        buildingFloor:
          example: Third floor
          type: string
          nullable: true
        gateOrPortalOrInboxCode:
          example: '3124'
          type: string
          nullable: true
    ApiClient:
      type: object
      description: ''
      deprecated: false
      required:
        - identifier
        - createdAt
      properties:
        identifier:
          maxLength: 32
          type: string
        owner:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          type: string
          format: date-time
        secret:
          type: string
          nullable: true
        monthlyQuota:
          type: integer
          nullable: true
        name:
          type: string
        redirectUris:
          type: array
          items:
            $ref: '#/components/schemas/RedirectUri'
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope'
        active:
          type: boolean
        allowPlainTextPkce:
          writeOnly: true
          type: boolean
        confidential:
          readOnly: true
          type: boolean
        plainTextPkceAllowed:
          readOnly: true
          type: boolean
    Dispute:
      type: object
      description: Access directly our resolution center without having used the safe-checkout feature.
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        url:
          format: uri
          externalDocs:
            url: https://schema.org/url
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
          nullable: true
        transaction:
          type: string
          format: iri-reference
        status:
          default: CREATED
          example: CREATED
          type: string
          enum:
            - CREATED
            - SUBMITTED
            - OPENED
            - ABANDONED
            - PENDING
            - OBJECTED
            - SHIPPED
            - IN_TRANSIT
            - RETURNED
            - DISMISSED
            - RESOLVED
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          type: string
          nullable: true
        itemCount:
          minimum: 0
          exclusiveMinimum: true
          description: The dispute may concern only PART of the package. Specify it there.
          example: 1
          type: integer
          nullable: true
        issueType:
          type: string
          enum:
            - NOT_AS_DESCRIBED
            - DOES_NOT_WORK
            - IS_INCOMPLETE
            - DELIVERY_ISSUE
            - ALLEGED_FRAUD
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          type: string
          enum:
            - WRONG_COLOUR
            - DAMAGED_OR_USED
            - INCORRECT_FORMAT_OR_SIZE
            - DIFFERENT_MATERIAL
            - null
          nullable: true
        issueDetails:
          example: The item received have multiple impacts on the left side, this was not mentioned and I feel a bit sad. Although it is usable as-is, I expected it without flaws.
          type: string
        complainantTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        sellerTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        complainantStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        inferredStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - null
          nullable: true
        recommendedSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        recommendedPartialRefundAmount:
          example: 35
          type: integer
          nullable: true
        chosenSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        chosenPartialRefundAmount:
          example: 40
          type: integer
          nullable: true
        counterSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        counterPartialRefundAmount:
          example: 30
          type: integer
          nullable: true
        complainantApproval:
          type: boolean
          nullable: true
        sellerApproval:
          type: boolean
          nullable: true
        platformSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        platformPartialRefundAmount:
          minimum: 0
          exclusiveMinimum: true
          type: integer
          nullable: true
        platformApproval:
          type: boolean
          nullable: true
        arbitrationBy:
          type: string
          format: iri-reference
          nullable: true
        parcels:
          type: array
          items:
            type: string
            format: iri-reference
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        iri:
          readOnly: true
          type: string
          format: iri-reference
        messageCount:
          readOnly: true
          example: 6
          type: integer
      required:
        - ulid
        - status
        - issueType
        - complainantTruthfulnessScore
        - sellerTruthfulnessScore
        - complainantStake
        - sellerApproval
        - parcels
        - messages
        - views
        - metadata
    Dispute-CollectionRead:
      type: object
      description: Access directly our resolution center without having used the safe-checkout feature.
      deprecated: false
      required:
        - ulid
        - status
        - issueType
        - complainantStake
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        transaction:
          $ref: '#/components/schemas/Transaction-CollectionRead'
        status:
          default: CREATED
          example: CREATED
          type: string
          enum:
            - CREATED
            - SUBMITTED
            - OPENED
            - ABANDONED
            - PENDING
            - OBJECTED
            - SHIPPED
            - IN_TRANSIT
            - RETURNED
            - DISMISSED
            - RESOLVED
        itemCount:
          minimum: 0
          exclusiveMinimum: true
          description: The dispute may concern only PART of the package. Specify it there.
          example: 1
          type: integer
          nullable: true
        issueType:
          type: string
          enum:
            - NOT_AS_DESCRIBED
            - DOES_NOT_WORK
            - IS_INCOMPLETE
            - DELIVERY_ISSUE
            - ALLEGED_FRAUD
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          type: string
          enum:
            - WRONG_COLOUR
            - DAMAGED_OR_USED
            - INCORRECT_FORMAT_OR_SIZE
            - DIFFERENT_MATERIAL
            - null
          nullable: true
        complainantStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        inferredStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - null
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        iri:
          readOnly: true
          type: string
          format: iri-reference
        messageCount:
          readOnly: true
          example: 6
          type: integer
    Dispute-IndependentWrite:
      type: object
      description: Access directly our resolution center without having used the safe-checkout feature.
      deprecated: false
      properties:
        transaction:
          $ref: '#/components/schemas/Transaction-IndependentWrite'
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          type: string
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata-IndependentWrite'
      required:
        - metadata
    Dispute-PostCreationRead:
      type: object
      description: Access directly our resolution center without having used the safe-checkout feature.
      deprecated: false
      required:
        - ulid
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        url:
          format: uri
          externalDocs:
            url: https://schema.org/url
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
          nullable: true
    Dispute-Read:
      type: object
      description: Access directly our resolution center without having used the safe-checkout feature.
      deprecated: false
      required:
        - ulid
        - status
        - issueType
        - complainantTruthfulnessScore
        - sellerTruthfulnessScore
        - complainantStake
        - sellerApproval
        - parcels
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        transaction:
          $ref: '#/components/schemas/Transaction-Read'
        status:
          default: CREATED
          example: CREATED
          type: string
          enum:
            - CREATED
            - SUBMITTED
            - OPENED
            - ABANDONED
            - PENDING
            - OBJECTED
            - SHIPPED
            - IN_TRANSIT
            - RETURNED
            - DISMISSED
            - RESOLVED
        itemCount:
          minimum: 0
          exclusiveMinimum: true
          description: The dispute may concern only PART of the package. Specify it there.
          example: 1
          type: integer
          nullable: true
        issueType:
          type: string
          enum:
            - NOT_AS_DESCRIBED
            - DOES_NOT_WORK
            - IS_INCOMPLETE
            - DELIVERY_ISSUE
            - ALLEGED_FRAUD
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          type: string
          enum:
            - WRONG_COLOUR
            - DAMAGED_OR_USED
            - INCORRECT_FORMAT_OR_SIZE
            - DIFFERENT_MATERIAL
            - null
          nullable: true
        issueDetails:
          example: The item received have multiple impacts on the left side, this was not mentioned and I feel a bit sad. Although it is usable as-is, I expected it without flaws.
          type: string
        complainantTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        sellerTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        complainantStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        inferredStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - null
          nullable: true
        recommendedSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        recommendedPartialRefundAmount:
          example: 35
          type: integer
          nullable: true
        chosenSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        chosenPartialRefundAmount:
          example: 40
          type: integer
          nullable: true
        counterSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        counterPartialRefundAmount:
          example: 30
          type: integer
          nullable: true
        complainantApproval:
          type: boolean
          nullable: true
        sellerApproval:
          type: boolean
          nullable: true
        platformSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        platformPartialRefundAmount:
          minimum: 0
          exclusiveMinimum: true
          type: integer
          nullable: true
        platformApproval:
          type: boolean
          nullable: true
        arbitrationBy:
          type: string
          format: iri-reference
          nullable: true
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/Parcel-Read'
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        iri:
          readOnly: true
          type: string
          format: iri-reference
        messageCount:
          readOnly: true
          example: 6
          type: integer
    Dispute-Update:
      type: object
      description: Access directly our resolution center without having used the safe-checkout feature.
      deprecated: false
      properties:
        itemCount:
          minimum: 0
          exclusiveMinimum: true
          description: The dispute may concern only PART of the package. Specify it there.
          example: 1
          type: integer
          nullable: true
        issueType:
          type: string
          enum:
            - NOT_AS_DESCRIBED
            - DOES_NOT_WORK
            - IS_INCOMPLETE
            - DELIVERY_ISSUE
            - ALLEGED_FRAUD
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          type: string
          enum:
            - WRONG_COLOUR
            - DAMAGED_OR_USED
            - INCORRECT_FORMAT_OR_SIZE
            - DIFFERENT_MATERIAL
            - null
          nullable: true
        issueDetails:
          example: The item received have multiple impacts on the left side, this was not mentioned and I feel a bit sad. Although it is usable as-is, I expected it without flaws.
          type: string
        complainantStake:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        chosenSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        chosenPartialRefundAmount:
          example: 40
          type: integer
          nullable: true
        counterSolution:
          type: string
          enum:
            - PARTIAL_REFUND_WITH_PARTIAL_RETURN
            - PARTIAL_REFUND_WITHOUT_RETURN
            - COMPLETE_REFUND_WITH_RETURN
            - COMPLETE_REFUND_WITHOUT_RETURN
            - ABANDON_CLAIM
            - null
          nullable: true
        counterPartialRefundAmount:
          example: 30
          type: integer
          nullable: true
        complainantApproval:
          type: boolean
          nullable: true
        sellerApproval:
          type: boolean
          nullable: true
      required:
        - issueType
        - complainantStake
        - sellerApproval
    Dispute-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          type: string
          nullable: true
    Evaluation-Read:
      type: object
      description: ''
      deprecated: false
      properties:
        rating:
          example: 7
          type: integer
        comment:
          example: quickly handled and despite a minor issue, everything did go well enough!
          type: string
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
    Evaluation-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        rating:
          example: 7
          type: integer
        comment:
          example: quickly handled and despite a minor issue, everything did go well enough!
          type: string
          nullable: true
    Evidence:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        dispute:
          type: string
          format: iri-reference
          nullable: true
        owner:
          type: string
          format: iri-reference
          nullable: true
        status:
          default: SUBMITTED
          example: SUBMITTED
          type: string
          enum:
            - SUBMITTED
            - CORRELATED
            - UNRELATED
            - PENDING
            - TEMPERED
            - REJECTED
        media:
          type: string
          format: iri-reference
          nullable: true
        additionalInformation:
          description: Description of what the evidence actually is.
          example: The motherboard I received have a minor scratch at the bottom, here is the proof.
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
      required:
        - status
    Evidence-Read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        status:
          default: SUBMITTED
          example: SUBMITTED
          type: string
          enum:
            - SUBMITTED
            - CORRELATED
            - UNRELATED
            - PENDING
            - TEMPERED
            - REJECTED
        media:
          anyOf:
            - $ref: '#/components/schemas/Media-Read'
          nullable: true
        additionalInformation:
          description: Description of what the evidence actually is.
          example: The motherboard I received have a minor scratch at the bottom, here is the proof.
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
      required:
        - status
    Evidence-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        additionalInformation:
          description: Description of what the evidence actually is.
          example: The motherboard I received have a minor scratch at the bottom, here is the proof.
          type: string
    Grant:
      type: object
      description: ''
      deprecated: false
    Media:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        extension:
          type: string
        filename:
          type: string
        publicUrl:
          format: uri
          externalDocs:
            url: https://schema.org/url
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          type: string
          nullable: true
        file:
          type: string
          format: binary
          nullable: true
        b64EncodedTmpFile:
          type: string
          nullable: true
        thumbnail:
          description: Associated 374x374 pixels small thumbnail
          type: string
          format: iri-reference
          nullable: true
        original:
          type: string
          format: iri-reference
          nullable: true
        owner:
          type: string
          format: iri-reference
          nullable: true
        thumbnailUrl:
          format: uri
          readOnly: true
          externalDocs:
            url: https://schema.org/url
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          type: string
          nullable: true
      required:
        - extension
        - filename
    Media-Read:
      type: object
      description: ''
      deprecated: false
      properties:
        publicUrl:
          format: uri
          externalDocs:
            url: https://schema.org/url
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          type: string
          nullable: true
    Message:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        agent:
          type: string
          format: iri-reference
          nullable: true
        from:
          type: string
          format: iri-reference
          nullable: true
        to:
          type: string
          format: iri-reference
          nullable: true
        body:
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
      required:
        - body
    Metadata:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        key:
          example: External-ID
          type: string
        value:
          example: '54412'
          type: string
          nullable: true
      required:
        - key
    Metadata-IndependentWrite:
      type: object
      description: ''
      deprecated: false
      required:
        - key
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: '54412'
          type: string
          nullable: true
    Metadata-Read:
      type: object
      description: ''
      deprecated: false
      required:
        - key
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: '54412'
          type: string
          nullable: true
    Metadata-Update:
      type: object
      description: ''
      deprecated: false
      required:
        - key
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: '54412'
          type: string
          nullable: true
    Metadata-Write:
      type: object
      description: ''
      deprecated: false
      required:
        - key
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: '54412'
          type: string
          nullable: true
    Notification:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        type:
          type: string
          enum:
            - DISPUTE_STATE_UPDATE
            - MESSAGE_SENT
            - DISPUTE_SETTLEMENT
            - DISPUTE_ARBITRATION_REQUIRED
            - DISPUTE_RESOLVED
        seen:
          type: boolean
        createdAt:
          readOnly: true
          type: string
          format: date-time
      required:
        - type
    Notification-Read:
      type: object
      description: ''
      deprecated: false
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - DISPUTE_STATE_UPDATE
            - MESSAGE_SENT
            - DISPUTE_SETTLEMENT
            - DISPUTE_ARBITRATION_REQUIRED
            - DISPUTE_RESOLVED
        seen:
          type: boolean
        createdAt:
          readOnly: true
          type: string
          format: date-time
    Notification-Update:
      type: object
      description: ''
      deprecated: false
      properties:
        seen:
          type: boolean
    Offer:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        ulid:
          type: string
        publicUrl:
          description: If specified, there would be not need for you to fill-in details. Must be accessible over WAN.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          type: string
          nullable: true
        enforcePersonaAuth:
          description: Mean that the generated url cannot be accessed without a generated token for a Persona. Disallow external registration.
          type: boolean
        overrideRateCommissionSafeCheckout:
          description: Override YOUR platform fees for that particular Offer.
          type: number
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          type: string
          nullable: true
        url:
          format: uri
          readOnly: true
          externalDocs:
            url: https://schema.org/url
          example: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
          nullable: true
        organization:
          type: string
          format: iri-reference
          nullable: true
        seller:
          description: If the seller is actually YOUR organization, set it to NULL.
          type: string
          format: iri-reference
          nullable: true
        nature:
          description: This WILL affect the assigned workflow. Choosing service will disable delivery for example. Refer to our technical hub for more information.
          default: physical_item
          example: physical_item
          type: string
          enum:
            - service
            - physical_item
            - dematerialized_item
            - rent_item
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          type: string
          nullable: true
        unitPrice:
          example: 125.54
          type: number
          nullable: true
        currencyCode:
          default: EUR
          example: EUR
          type: string
          nullable: true
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          example: USED
          type: string
          enum:
            - NEW
            - USED
            - DAMAGED
            - DETERIORATED
            - UNRECOVERABLE
        weightInGram:
          type: integer
          nullable: true
        shippingAllowed:
          description: That toggle allows the seller to propose shipping for its item. If set in conjunction of shippingCarrier, the label will be automatically generated. Also, it will restrict the carrier to the limited subset defined.
          type: boolean
        handDeliveryAllowed:
          description: Enable both parties to finalize the transaction in person rather than using delivery. A QR Code must be scanned by the seller once the buyer claims the product.
          default: true
          example: true
          type: boolean
        shippingCarriers:
          type: array
          items:
            type: string
            enum:
              - SwissPost
              - Colissimo
              - MondialRelay
          description: If you wish to enable automated shipping label generation through a specific provider, specify it there.
        eanCode:
          example: '4718017388450'
          type: string
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        medias:
          type: array
          items:
            type: string
            format: iri-reference
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        iri:
          readOnly: true
          type: string
          format: iri-reference
      required:
        - ulid
        - enforcePersonaAuth
        - overrideRateCommissionSafeCheckout
        - url
        - nature
        - itemCount
        - condition
        - shippingAllowed
        - handDeliveryAllowed
        - shippingCarriers
        - metadata
        - medias
        - views
    Offer-CollectionRead:
      type: object
      description: An Offer object represent a public listening
      deprecated: false
      required:
        - ulid
        - itemCount
        - condition
      properties:
        ulid:
          type: string
        publicUrl:
          description: If specified, there would be not need for you to fill-in details. Must be accessible over WAN.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          type: string
          nullable: true
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        unitPrice:
          example: 125.54
          type: number
          nullable: true
        currencyCode:
          default: EUR
          example: EUR
          type: string
          nullable: true
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          example: USED
          type: string
          enum:
            - NEW
            - USED
            - DAMAGED
            - DETERIORATED
            - UNRECOVERABLE
    Offer-IndependentWrite:
      type: object
      description: An Offer object represent a public listening
      deprecated: false
      properties:
        publicUrl:
          description: If specified, there would be not need for you to fill-in details. Must be accessible over WAN.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          type: string
          nullable: true
        seller:
          description: If the seller is actually YOUR organization, set it to NULL.
          anyOf:
            - $ref: '#/components/schemas/Persona-IndependentWrite'
          nullable: true
        nature:
          description: This WILL affect the assigned workflow. Choosing service will disable delivery for example. Refer to our technical hub for more information.
          default: physical_item
          example: physical_item
          type: string
          enum:
            - service
            - physical_item
            - dematerialized_item
            - rent_item
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          type: string
          nullable: true
        unitPrice:
          example: 125.54
          type: number
          nullable: true
        currencyCode:
          default: EUR
          example: EUR
          type: string
          nullable: true
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          example: USED
          type: string
          enum:
            - NEW
            - USED
            - DAMAGED
            - DETERIORATED
            - UNRECOVERABLE
        weightInGram:
          type: integer
          nullable: true
        eanCode:
          example: '4718017388450'
          type: string
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata-IndependentWrite'
      required:
        - nature
        - itemCount
        - condition
        - metadata
    Offer-PostCreationRead:
      type: object
      description: An Offer object represent a public listening
      deprecated: false
      required:
        - url
      properties:
        url:
          format: uri
          readOnly: true
          externalDocs:
            url: https://schema.org/url
          example: https://next.tripartie.app/?c=01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
          nullable: true
    Offer-Read:
      type: object
      description: An Offer object represent a public listening
      deprecated: false
      required:
        - ulid
        - nature
        - itemCount
        - condition
      properties:
        ulid:
          type: string
        publicUrl:
          description: If specified, there would be not need for you to fill-in details. Must be accessible over WAN.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          type: string
          nullable: true
        nature:
          description: This WILL affect the assigned workflow. Choosing service will disable delivery for example. Refer to our technical hub for more information.
          default: physical_item
          example: physical_item
          type: string
          enum:
            - service
            - physical_item
            - dematerialized_item
            - rent_item
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          type: string
          nullable: true
        unitPrice:
          example: 125.54
          type: number
          nullable: true
        currencyCode:
          default: EUR
          example: EUR
          type: string
          nullable: true
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          example: USED
          type: string
          enum:
            - NEW
            - USED
            - DAMAGED
            - DETERIORATED
            - UNRECOVERABLE
    Offer-Update:
      type: object
      description: ''
      deprecated: false
      properties:
        publicUrl:
          description: If specified, there would be not need for you to fill-in details. Must be accessible over WAN.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          type: string
          nullable: true
        enforcePersonaAuth:
          description: Mean that the generated url cannot be accessed without a generated token for a Persona. Disallow external registration.
          type: boolean
        overrideRateCommissionSafeCheckout:
          description: Override YOUR platform fees for that particular Offer.
          type: number
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          type: string
          nullable: true
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          type: string
          nullable: true
        unitPrice:
          example: 125.54
          type: number
          nullable: true
        currencyCode:
          default: EUR
          example: EUR
          type: string
          nullable: true
        itemCount:
          default: 1
          example: 1
          type: integer
        weightInGram:
          type: integer
          nullable: true
        shippingAllowed:
          description: That toggle allows the seller to propose shipping for its item. If set in conjunction of shippingCarrier, the label will be automatically generated. Also, it will restrict the carrier to the limited subset defined.
          type: boolean
        handDeliveryAllowed:
          description: Enable both parties to finalize the transaction in person rather than using delivery. A QR Code must be scanned by the seller once the buyer claims the product.
          default: true
          example: true
          type: boolean
        shippingCarriers:
          type: array
          items:
            type: string
            enum:
              - SwissPost
              - Colissimo
              - MondialRelay
          description: If you wish to enable automated shipping label generation through a specific provider, specify it there.
        eanCode:
          example: '4718017388450'
          type: string
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata-Update'
      required:
        - enforcePersonaAuth
        - overrideRateCommissionSafeCheckout
        - itemCount
        - shippingAllowed
        - handDeliveryAllowed
        - shippingCarriers
        - metadata
    Offer-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        publicUrl:
          description: If specified, there would be not need for you to fill-in details. Must be accessible over WAN.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          type: string
          nullable: true
        enforcePersonaAuth:
          description: Mean that the generated url cannot be accessed without a generated token for a Persona. Disallow external registration.
          type: boolean
        overrideRateCommissionSafeCheckout:
          description: Override YOUR platform fees for that particular Offer.
          type: number
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?checkout=true
          type: string
          nullable: true
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
          type: string
          nullable: true
        unitPrice:
          example: 125.54
          type: number
          nullable: true
        currencyCode:
          default: EUR
          example: EUR
          type: string
          nullable: true
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          example: USED
          type: string
          enum:
            - NEW
            - USED
            - DAMAGED
            - DETERIORATED
            - UNRECOVERABLE
        weightInGram:
          type: integer
          nullable: true
        shippingAllowed:
          description: That toggle allows the seller to propose shipping for its item. If set in conjunction of shippingCarrier, the label will be automatically generated. Also, it will restrict the carrier to the limited subset defined.
          type: boolean
        handDeliveryAllowed:
          description: Enable both parties to finalize the transaction in person rather than using delivery. A QR Code must be scanned by the seller once the buyer claims the product.
          default: true
          example: true
          type: boolean
        shippingCarriers:
          type: array
          items:
            type: string
            enum:
              - SwissPost
              - Colissimo
              - MondialRelay
          description: If you wish to enable automated shipping label generation through a specific provider, specify it there.
        eanCode:
          example: '4718017388450'
          type: string
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata-Write'
      required:
        - enforcePersonaAuth
        - overrideRateCommissionSafeCheckout
        - itemCount
        - condition
        - shippingAllowed
        - handDeliveryAllowed
        - shippingCarriers
        - metadata
    Organization-Read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        domainVerified:
          type: boolean
      required:
        - domainVerified
    Organization-SupportRead:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
    Organization-Update:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        vatNumber:
          type: string
          nullable: true
        commercialRegistryNumber:
          type: string
        websiteUrl:
          type: string
          nullable: true
        customBaseUrl:
          type: string
          nullable: true
        billingAddress:
          anyOf:
            - $ref: '#/components/schemas/Address-Update'
          nullable: true
        primaryColor:
          type: string
          nullable: true
        secondaryColor:
          type: string
          nullable: true
        accentColor:
          type: string
          nullable: true
        errorColor:
          type: string
          nullable: true
        infoColor:
          type: string
          nullable: true
        successColor:
          type: string
          nullable: true
        warningColor:
          type: string
          nullable: true
        endUserNotificationToggle:
          type: boolean
        anonymityLevel:
          default: PARTIAL_FIRST_NAME
          example: PARTIAL_FIRST_NAME
          type: string
          enum:
            - COMPLETE
            - PARTIAL_FIRST_NAME
            - TRANSPARENT
        flatRateEnabled:
          readOnly: true
          type: boolean
        rateCommissionSafeCheckout:
          type: number
      required:
        - endUserNotificationToggle
        - anonymityLevel
        - rateCommissionSafeCheckout
    Organization-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        vatNumber:
          type: string
          nullable: true
        commercialRegistryNumber:
          type: string
        websiteUrl:
          type: string
          nullable: true
        billingAddress:
          anyOf:
            - $ref: '#/components/schemas/Address-Write'
          nullable: true
    Parcel:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        carrier:
          type: string
          enum:
            - SwissPost
            - MondialRelay
            - Colissimo
            - Dhl
            - Chronopost
            - ColisPrive
            - Dpd
            - Ups
            - FedEx
            - RelaisColis
        identifier:
          minLength: 4
          maxLength: 128
          example: 8J001271466474
          type: string
        price:
          minimum: 0
          example: 4.88
          type: number
          nullable: true
        currency:
          externalDocs:
            url: https://schema.org/priceCurrency
          default: EUR
          example: EUR
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        dispute:
          type: string
          format: iri-reference
          nullable: true
        transaction:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
      required:
        - carrier
        - identifier
    Parcel-CollectionRead:
      type: object
      description: ''
      deprecated: false
    Parcel-IndependentWrite:
      type: object
      description: ''
      deprecated: false
      required:
        - carrier
        - identifier
      properties:
        carrier:
          type: string
          enum:
            - SwissPost
            - MondialRelay
            - Colissimo
            - Dhl
            - Chronopost
            - ColisPrive
            - Dpd
            - Ups
            - FedEx
            - RelaisColis
        identifier:
          minLength: 4
          maxLength: 128
          example: 8J001271466474
          type: string
        price:
          minimum: 0
          example: 4.88
          type: number
          nullable: true
        currency:
          externalDocs:
            url: https://schema.org/priceCurrency
          default: EUR
          example: EUR
          type: string
          nullable: true
    Parcel-Read:
      type: object
      description: ''
      deprecated: false
      required:
        - carrier
        - identifier
      properties:
        carrier:
          type: string
          enum:
            - SwissPost
            - MondialRelay
            - Colissimo
            - Dhl
            - Chronopost
            - ColisPrive
            - Dpd
            - Ups
            - FedEx
            - RelaisColis
        identifier:
          minLength: 4
          maxLength: 128
          example: 8J001271466474
          type: string
        price:
          minimum: 0
          example: 4.88
          type: number
          nullable: true
        currency:
          externalDocs:
            url: https://schema.org/priceCurrency
          default: EUR
          example: EUR
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
    Parcel-Write:
      type: object
      description: ''
      deprecated: false
      required:
        - carrier
        - identifier
      properties:
        carrier:
          type: string
          enum:
            - SwissPost
            - MondialRelay
            - Colissimo
            - Dhl
            - Chronopost
            - ColisPrive
            - Dpd
            - Ups
            - FedEx
            - RelaisColis
        identifier:
          minLength: 4
          maxLength: 128
          example: 8J001271466474
          type: string
        price:
          minimum: 0
          example: 4.88
          type: number
          nullable: true
        currency:
          externalDocs:
            url: https://schema.org/priceCurrency
          default: EUR
          example: EUR
          type: string
          nullable: true
    Persona:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        captcha:
          type: string
          nullable: true
        organization:
          type: string
          format: iri-reference
          nullable: true
        targetUrl:
          description: The URL you wish that Persona to go to without additional MFA. The URL MUST concern that Persona.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
          nullable: true
        authUrl:
          format: uri
          description: Url that is able to bypass MFA for a single user. Please note that this should not be shared between the complainant and the seller or anyone external to them.
          externalDocs:
            url: https://schema.org/url
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
          type: string
          nullable: true
        expireAt:
          description: This authenticated-URL cannot be renewed, you will have to re-create one each time. Typically valid for a single hour.
          type: string
          format: date-time
          nullable: true
        password:
          description: The hashed password
          type: string
          nullable: true
        plainPassword:
          example: secr$t
          type: string
          nullable: true
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
            - RATHER_NOT_SAY
        dateOfBirth:
          format: date
          type: string
          nullable: true
        language:
          description: That data is used for rendering the frontend application with given language. If not set, will be inferred. Custom codes can be issued for specific requirements.
          example: FR
          type: string
          nullable: true
        email:
          example: john.doe@gmail.com
          type: string
          nullable: true
        mobilePhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        address:
          description: Always the Shipping address. Thus enabling automated package returns.
          anyOf:
            - $ref: '#/components/schemas/Address'
          nullable: true
        riskLevel:
          description: We sort Persona into three distinct risks' category. This is inferred from the riskScore.
          type: string
          enum:
            - WEAK
            - MEDIUM
            - HIGH
            - null
          nullable: true
        riskScore:
          maximum: 100
          minimum: 0
          description: That score is regularly updated, each action taken can potentially update that value. A value close to zero mean zero risk and close to a hundred mean risky.
          example: 24
          type: integer
          nullable: true
        externalPurchaseCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        externalSellCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different purposes. eg. Ease searching.
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        offers:
          type: array
          items:
            type: string
            format: iri-reference
        purchases:
          type: array
          items:
            type: string
            format: iri-reference
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/PersonaToken'
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        offerCount:
          readOnly: true
          description: Issued Offers count owned by a given Persona
          example: 4
          type: integer
        purchaseCount:
          readOnly: true
          example: 42
          type: integer
        roles:
          readOnly: true
          type: array
          items:
            type: string
        userIdentifier:
          readOnly: true
          description: Either email or the mobile phone number
          type: string
      required:
        - metadata
        - offers
        - purchases
        - tokens
        - views
    Persona-CollectionRead:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        email:
          example: john.doe@gmail.com
          type: string
          nullable: true
        riskLevel:
          description: We sort Persona into three distinct risks' category. This is inferred from the riskScore.
          type: string
          enum:
            - WEAK
            - MEDIUM
            - HIGH
            - null
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        offerCount:
          readOnly: true
          description: Issued Offers count owned by a given Persona
          example: 4
          type: integer
        purchaseCount:
          readOnly: true
          example: 42
          type: integer
    Persona-IndependentWrite:
      type: object
      description: ''
      deprecated: false
      properties:
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
            - RATHER_NOT_SAY
        dateOfBirth:
          format: date
          type: string
          nullable: true
        language:
          description: That data is used for rendering the frontend application with given language. If not set, will be inferred. Custom codes can be issued for specific requirements.
          example: FR
          type: string
          nullable: true
        email:
          example: john.doe@gmail.com
          type: string
          nullable: true
        mobilePhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        address:
          description: Always the Shipping address. Thus enabling automated package returns.
          anyOf:
            - $ref: '#/components/schemas/Address-IndependentWrite'
          nullable: true
        externalPurchaseCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        externalSellCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different purposes. eg. Ease searching.
          type: array
          items:
            $ref: '#/components/schemas/Metadata-IndependentWrite'
      required:
        - metadata
    Persona-PostAuthRead:
      type: object
      description: ''
      deprecated: false
      properties:
        authUrl:
          format: uri
          description: Url that is able to bypass MFA for a single user. Please note that this should not be shared between the complainant and the seller or anyone external to them.
          externalDocs:
            url: https://schema.org/url
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
          type: string
          nullable: true
        expireAt:
          description: This authenticated-URL cannot be renewed, you will have to re-create one each time. Typically valid for a single hour.
          type: string
          format: date-time
          nullable: true
    Persona-Read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
            - RATHER_NOT_SAY
        dateOfBirth:
          format: date
          type: string
          nullable: true
        language:
          description: That data is used for rendering the frontend application with given language. If not set, will be inferred. Custom codes can be issued for specific requirements.
          example: FR
          type: string
          nullable: true
        email:
          example: john.doe@gmail.com
          type: string
          nullable: true
        mobilePhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        address:
          description: Always the Shipping address. Thus enabling automated package returns.
          anyOf:
            - $ref: '#/components/schemas/Address-Read'
          nullable: true
        riskLevel:
          description: We sort Persona into three distinct risks' category. This is inferred from the riskScore.
          type: string
          enum:
            - WEAK
            - MEDIUM
            - HIGH
            - null
          nullable: true
        riskScore:
          maximum: 100
          minimum: 0
          description: That score is regularly updated, each action taken can potentially update that value. A value close to zero mean zero risk and close to a hundred mean risky.
          example: 24
          type: integer
          nullable: true
        externalPurchaseCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        externalSellCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different purposes. eg. Ease searching.
          type: array
          items:
            $ref: '#/components/schemas/Metadata-Read'
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
          nullable: true
        offerCount:
          readOnly: true
          description: Issued Offers count owned by a given Persona
          example: 4
          type: integer
        purchaseCount:
          readOnly: true
          example: 42
          type: integer
      required:
        - metadata
    Persona-Register:
      type: object
      description: ''
      deprecated: false
      properties:
        captcha:
          type: string
          nullable: true
        plainPassword:
          example: secr$t
          type: string
          nullable: true
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
            - RATHER_NOT_SAY
        dateOfBirth:
          format: date
          type: string
          nullable: true
        language:
          description: That data is used for rendering the frontend application with given language. If not set, will be inferred. Custom codes can be issued for specific requirements.
          example: FR
          type: string
          nullable: true
        email:
          example: john.doe@gmail.com
          type: string
          nullable: true
        mobilePhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
    Persona-Update:
      type: object
      description: ''
      deprecated: false
      properties:
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
            - RATHER_NOT_SAY
        dateOfBirth:
          format: date
          type: string
          nullable: true
        language:
          description: That data is used for rendering the frontend application with given language. If not set, will be inferred. Custom codes can be issued for specific requirements.
          example: FR
          type: string
          nullable: true
        address:
          description: Always the Shipping address. Thus enabling automated package returns.
          anyOf:
            - $ref: '#/components/schemas/Address-Update'
          nullable: true
        externalPurchaseCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        externalSellCount:
          description: Knowing the statistics on your user is used to better know its profile when you do not use the Safe-Checkout feature. Although it is not required, we recommend that you keep us informed.
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different purposes. eg. Ease searching.
          type: array
          items:
            $ref: '#/components/schemas/Metadata-Update'
      required:
        - metadata
    Persona-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
          enum:
            - MALE
            - FEMALE
            - OTHER
            - RATHER_NOT_SAY
        dateOfBirth:
          format: date
          type: string
          nullable: true
        language:
          description: That data is used for rendering the frontend application with given language. If not set, will be inferred. Custom codes can be issued for specific requirements.
          example: FR
          type: string
          nullable: true
        email:
          example: john.doe@gmail.com
          type: string
          nullable: true
        mobilePhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        address:
          description: Always the Shipping address. Thus enabling automated package returns.
          anyOf:
            - $ref: '#/components/schemas/Address-Write'
          nullable: true
        metadata:
          description: You can assign different meta to your Persona object for different purposes. eg. Ease searching.
          type: array
          items:
            $ref: '#/components/schemas/Metadata-Write'
      required:
        - metadata
    PersonaToken:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        persona:
          type: string
          format: iri-reference
        objectId:
          description: Optional limitation on a specific object.
          type: string
          nullable: true
        token:
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
        expireAt:
          type: string
          format: date-time
      required:
        - persona
        - token
        - expireAt
    RedirectUri:
      type: object
      description: ''
      deprecated: false
    Scope:
      type: object
      description: ''
      deprecated: false
    Transaction:
      type: object
      description: ''
      deprecated: false
    Transaction-CollectionRead:
      type: object
      description: ''
      deprecated: false
      required:
        - ulid
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Offer-CollectionRead'
    Transaction-IndependentWrite:
      type: object
      description: ''
      deprecated: false
      properties:
        offer:
          $ref: '#/components/schemas/Offer-IndependentWrite'
        buyer:
          $ref: '#/components/schemas/Persona-IndependentWrite'
        fees:
          type: number
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata-IndependentWrite'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/Parcel-IndependentWrite'
      required:
        - metadata
        - parcels
    Transaction-Read:
      type: object
      description: ''
      deprecated: false
      required:
        - ulid
        - metadata
        - parcels
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Offer-Read'
        buyer:
          type: string
          format: iri-reference
        fees:
          type: number
          nullable: true
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata-Read'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/Parcel-Read'
    User:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: string
          format: iri-reference
        captcha:
          type: string
          nullable: true
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          type: string
          nullable: true
        roleInCompany:
          example: Accounting Dpt
          type: string
          nullable: true
        birthday:
          type: string
          format: date-time
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        password:
          description: The hashed password
          type: string
        plainPassword:
          example: secr$t
          type: string
          nullable: true
        intlPhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        originCountry:
          maxLength: 3
          description: The originating country
          example: FRA
          type: string
        preferredLanguage:
          maxLength: 2
          example: FR
          type: string
        lastSuccessfulLogIn:
          type: string
          format: date-time
          nullable: true
        emailVerificationCode:
          type: string
          nullable: true
        emailVerificationInput:
          type: string
          nullable: true
        phoneVerificationCode:
          type: string
          nullable: true
        phoneVerificationInput:
          type: string
          nullable: true
        avatar:
          type: string
          format: iri-reference
          nullable: true
        notifications:
          readOnly: true
          type: array
          items:
            type: string
            format: iri-reference
        medias:
          readOnly: true
          type: array
          items:
            type: string
            format: iri-reference
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
        api:
          anyOf:
            - $ref: '#/components/schemas/ApiClient'
          nullable: true
        organization:
          type: string
          format: iri-reference
          nullable: true
        username:
          readOnly: true
          description: A visual identifier that represents this user.
          type: string
        salt:
          readOnly: true
          type: string
          nullable: true
        userIdentifier:
          readOnly: true
          type: string
      required:
        - birthday
        - roles
        - password
        - views
        - consentMailNotification
        - consentMailAds
    User-EmailValidationWrite:
      type: object
      description: ''
      deprecated: false
      required:
        - emailVerificationInput
      properties:
        emailVerificationInput:
          minLength: 128
          maxLength: 128
          type: string
          nullable: true
    User-PostRegisterRead:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: string
          format: iri-reference
    User-SupportRead:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: string
          format: iri-reference
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          type: string
          nullable: true
        roleInCompany:
          example: Accounting Dpt
          type: string
          nullable: true
        email:
          type: string
        intlPhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        lastSuccessfulLogIn:
          type: string
          format: date-time
          nullable: true
        avatar:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
        organization:
          anyOf:
            - $ref: '#/components/schemas/Organization-SupportRead'
          nullable: true
    User-Write:
      type: object
      description: ''
      deprecated: false
      properties:
        captcha:
          type: string
          nullable: true
        firstName:
          minLength: 1
          maxLength: 64
          example: Jacob
          type: string
        lastName:
          minLength: 1
          maxLength: 64
          example: TAHRI
          type: string
        publicName:
          minLength: 2
          maxLength: 32
          example: Nickname
          type: string
          nullable: true
        roleInCompany:
          minLength: 2
          maxLength: 32
          example: Accounting Dpt
          type: string
          nullable: true
        birthday:
          type: string
          format: date-time
        email:
          format: email
          maxLength: 180
          externalDocs:
            url: https://schema.org/email
          type: string
        plainPassword:
          minLength: 6
          maxLength: 64
          example: secr$t
          type: string
          nullable: true
        intlPhoneNumber:
          example: '+33700000000'
          type: string
          nullable: true
        originCountry:
          description: The originating country
          example: FRA
          type: string
        preferredLanguage:
          example: FR
          type: string
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
        organization:
          anyOf:
            - $ref: '#/components/schemas/Organization-Write'
          nullable: true
      required:
        - firstName
        - lastName
        - publicName
        - roleInCompany
        - email
        - plainPassword
        - originCountry
        - preferredLanguage
    View:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        ipAddress:
          type: string
        offer:
          type: string
          format: iri-reference
          nullable: true
        dispute:
          type: string
          format: iri-reference
          nullable: true
        persona:
          type: string
          format: iri-reference
          nullable: true
        user:
          type: string
          format: iri-reference
          nullable: true
        createdAt:
          readOnly: true
          type: string
          format: date-time
      required:
        - ipAddress
    WebhookHistory:
      type: object
      description: ''
      deprecated: false
    WebhookHistory-CollectionRead:
      type: object
      description: ''
      deprecated: false
      required:
        - event
        - responseCode
        - retryCount
      properties:
        event:
          type: string
          enum:
            - dispute.opened
            - dispute.submitted
            - dispute.created
            - dispute.abandoned
            - dispute.settlement
            - dispute.closed
            - dispute.manual_arbitration_required
            - dispute.updated
            - offer.created
            - offer.expired
            - offer.updated
            - offer.crawl_failure
            - offer.transaction.authorized
            - offer.transaction.reconciled
            - offer.transaction.abandoned
            - offer.closed
            - offer.transaction.refund
            - persona.added
        responseCode:
          type: integer
        createdAt:
          readOnly: true
          type: string
          format: date-time
        attemptedAt:
          readOnly: true
          type: string
          format: date-time
        retryCount:
          type: integer
    WebhookHistory-Read:
      type: object
      description: ''
      deprecated: false
      required:
        - event
        - url
        - responseCode
        - responseBody
        - retryCount
      properties:
        event:
          type: string
          enum:
            - dispute.opened
            - dispute.submitted
            - dispute.created
            - dispute.abandoned
            - dispute.settlement
            - dispute.closed
            - dispute.manual_arbitration_required
            - dispute.updated
            - offer.created
            - offer.expired
            - offer.updated
            - offer.crawl_failure
            - offer.transaction.authorized
            - offer.transaction.reconciled
            - offer.transaction.abandoned
            - offer.closed
            - offer.transaction.refund
            - persona.added
        url:
          type: string
        responseCode:
          type: integer
        responseBody:
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
        attemptedAt:
          readOnly: true
          type: string
          format: date-time
        retryCount:
          type: integer
    WebhookSubscription-Read:
      type: object
      description: ''
      deprecated: false
      required:
        - event
        - callbackUrl
      properties:
        event:
          type: string
          enum:
            - dispute.opened
            - dispute.submitted
            - dispute.created
            - dispute.abandoned
            - dispute.settlement
            - dispute.closed
            - dispute.manual_arbitration_required
            - dispute.updated
            - offer.created
            - offer.expired
            - offer.updated
            - offer.crawl_failure
            - offer.transaction.authorized
            - offer.transaction.reconciled
            - offer.transaction.abandoned
            - offer.closed
            - offer.transaction.refund
            - persona.added
        callbackUrl:
          format: uri
          minLength: 4
          maxLength: 5000
          externalDocs:
            url: https://schema.org/url
          example: https://company.tld/webhook/tripartie
          type: string
        createdAt:
          readOnly: true
          type: string
          format: date-time
    WebhookSubscription-Write:
      type: object
      description: ''
      deprecated: false
      required:
        - event
        - callbackUrl
      properties:
        event:
          type: string
          enum:
            - dispute.opened
            - dispute.submitted
            - dispute.created
            - dispute.abandoned
            - dispute.settlement
            - dispute.closed
            - dispute.manual_arbitration_required
            - dispute.updated
            - offer.created
            - offer.expired
            - offer.updated
            - offer.crawl_failure
            - offer.transaction.authorized
            - offer.transaction.reconciled
            - offer.transaction.abandoned
            - offer.closed
            - offer.transaction.refund
            - persona.added
        callbackUrl:
          format: uri
          minLength: 4
          maxLength: 5000
          externalDocs:
            url: https://schema.org/url
          example: https://company.tld/webhook/tripartie
          type: string
    Webhook:
      type: object
      properties:
        id:
          type: integer
          example: 122541
        event:
          type: string
          example: dispute.created
          enum:
            - dispute.opened
            - dispute.submitted
            - dispute.created
            - dispute.abandoned
            - dispute.settlement
            - dispute.closed
            - dispute.manual_arbitration_required
            - dispute.updated
            - offer.created
            - offer.expired
            - offer.updated
            - offer.crawl_failure
            - offer.transaction.authorized
            - offer.transaction.reconciled
            - offer.transaction.abandoned
            - offer.closed
            - offer.transaction.refund
            - persona.added
        objectId:
          type: string
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        iri:
          type: string
          format: iri
        occurredAt:
          type: string
          format: date-time
        object:
          anyOf:
            - $ref: '#/components/schemas/Dispute-Read'
            - $ref: '#/components/schemas/Persona-Read'
            - $ref: '#/components/schemas/Offer-Read'
          nullable: false
    UnprocessableEntity:
      type: object
      properties:
        type:
          type: string
          example: https://tools.ietf.org/html/rfc2616#section-10
        title:
          type: string
          example: An error occurred
        detail:
          type: string
          example: |-
            firstName: This value should not be blank.
            lastName: This value should not be blank.
            email: This value should not be null.
            plainPassword: This value should not be null.
            originCountry: This value should not be null.
            preferredLanguage: This value should not be null.
        violations:
          type: array
          items:
            type: object
            properties:
              propertyPath:
                type: string
                example: firstName
              message:
                type: string
                example: This value should not be blank.
              code:
                type: string
                format: identifier
                example: c1051bb4-d103-4f74-8988-acbcafc7fdc3
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    oauth:
      type: oauth2
      description: OAuth 2.0 application Grant
      flows:
        clientCredentials:
          tokenUrl: /token
          scopes:
            OFFER_READ: Read-only operations on safe-checkout offers
            OFFER_WRITE: Write permissions on safe-checkout offers
            DISPUTE_READ: Read-only operations on disputes
            DISPUTE_WRITE: Write permissions on disputes
            DISPUTE_ARBITRATION: Update permission on disputes for manual arbitration only
            ORGANIZATION_READ: Read organization details and stats
            RULING_READ: Read custom rules applied to the dispute resolution program
            RULING_WRITE: Write custom rules applied to the dispute resolution program
            PERSONA_READ: Read operations on the shared user-base knowledge
            PERSONA_WRITE: Write permissions on the shared user-base knowledge
            PERSONA_AUTH: Capability to issue short-term lived authenticated URL
    jwtPersonalKey:
      type: apiKey
      description: Value for the Authorization header parameter.
      name: Authorization
      in: header
    personaAuthKey:
      type: apiKey
      description: Value for the X-Persona-Auth header parameter.
      name: X-Persona-Auth
      in: header
security:
  - oauth: []
  - jwtPersonalKey: []
  - personaAuthKey: []
tags:
  - name: Resolution-Center
    description: Automate disputes between your customers while making sure they are satisfied
  - name: Safe-Checkout
    description: Make offers and transactions for your marketplace without the inherent risks
  - name: Persona
    description: Common shared knowledge of your base users
  - name: Webhook
    description: Be kept up-to-date if anything happens
  - name: Transaction
    description: Offers tend to end up in transactions, this section help you keep track of it
  - name: Branding
    description: Customize the appearance of the front application so that your customer would recognize it as your own
