openapi: 3.1.0
info:
  contact:
    email: noc@tripartie.com
    name: Tripartie SAS
    url: https://tripartie.com
  description: "Simple, yet elegant web interfaces for your convenience. One request\
    \ away from your first automated resolution."
  title: Resolution Center
  version: 2.0.208
servers:
- description: Sandbox
  url: https://staging-api.tripartie.com
- description: Production
  url: https://api.tripartie.com
- description: Development
  url: https://api.tripartie.dev
security:
- oauth: []
- jwtPersonalKey: []
- personaAuthKey: []
tags:
- description: Automate disputes between your customers while making sure they are
    satisfied
  name: Resolution-Center
- description: Common shared knowledge of your base users
  name: Persona
- description: Be kept up-to-date if anything happens
  name: Webhook
- description: Customize the appearance of the front application so that your customer
    would recognize it as your own
  name: Branding
- description: You should not care about this section as it serve internal purposes
  name: User
paths:
  /api-clients:
    get:
      deprecated: false
      description: Retrieves the collection of ApiClient resources.
      operationId: api_api-clients_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiClient-Read'
                type: array
          description: ApiClient collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves the collection of ApiClient resources.
      tags:
      - User
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a ApiClient resource.
      operationId: api_api-clients_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiClient-Write'
        description: The new ApiClient resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient-PostCreationRead'
          description: ApiClient resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Creates a ApiClient resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /api-clients/{identifier}:
    delete:
      deprecated: false
      description: Removes the ApiClient resource.
      operationId: api_api-clients_identifier_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: ApiClient identifier
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ApiClient resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the ApiClient resource.
      tags:
      - User
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a ApiClient resource.
      operationId: api_api-clients_identifier_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: ApiClient identifier
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClient-Read'
          description: ApiClient resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a ApiClient resource.
      tags:
      - User
      x-accepts:
      - application/json
  /authentication:
    post:
      description: "This endpoint is protected by a captcha, do not try to use it\
        \ to consume our API. IP/CIDR to be banned upon fraudulent/irregular usage.\
        \ Follow the oauth 2.0 authentication challenge as described in the documentation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserJwtWrite'
        description: ""
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserJwtCreated'
          description: ""
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: ""
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: User authentication
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /disputes:
    get:
      deprecated: false
      description: Retrieves the collection of Dispute resources.
      operationId: api_disputes_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[createdAt]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[status]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[updatedAt]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: transaction.offer.publicUrl
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "transaction.offer.publicUrl[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: transaction.offer.title
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: transaction.buyer.id
        required: false
        schema:
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "transaction.buyer.id[]"
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: transaction.buyer.email
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: transaction.offer.seller.id
        required: false
        schema:
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "transaction.offer.seller.id[]"
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: transaction.offer.seller.email
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of status
        example: CREATED
        explode: false
        in: query
        name: status
        required: false
        schema:
          enum:
          - CREATED
          - SUBMITTED
          - OPENED
          - ABANDONED
          - OBJECTED
          - PENDING_SHIPMENT
          - SHIPPED
          - IN_TRANSIT
          - RETURNED
          - DISMISSED
          - RESOLVED
          - PENDING
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of transaction.status
        example: CREATED
        explode: false
        in: query
        name: transaction.status
        required: false
        schema:
          enum:
          - CREATED
          - AUTHORIZED
          - REFUSED
          - ACCEPTED
          - SHIPPED
          - IN_TRANSIT
          - DELIVERED
          - COMPLETED
          - DISPUTED
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "exists[recommendedSolution]"
        required: false
        schema:
          type: boolean
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "exists[chosenSolution]"
        required: false
        schema:
          type: boolean
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "exists[counterSolution]"
        required: false
        schema:
          type: boolean
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "exists[platformSolution]"
        required: false
        schema:
          type: boolean
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for metadata. Must be a multiple of two
          items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for transaction.metadata. Must be a multiple
          of two items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "transaction.metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for transaction.offer.metadata. Must be
          a multiple of two items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "transaction.offer.metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Dispute-CollectionRead'
                type: array
          description: Dispute collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of Dispute resources.
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: |-
        Create a draft dispute to be filled by an alleged aggrieved customer.
        Do not use that endpoint if the transaction took place using our safe-checkout tunnel.
        This endpoint return a unique URL that can be accessed by both the complainant and seller (if individual).

        **Note:** You can generate at your own discretion tokens for both parties, thus avoiding the secondary authentication.
      operationId: api_disputes_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute-IndependentWrite'
        description: The new Dispute resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-PostCreationRead'
          description: Dispute resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_WRITE
        - PERSONA_WRITE
      summary: Draft a standalone Dispute
      tags:
      - Resolution-Center
      x-content-type: application/json
      x-accepts:
      - application/json
  /disputes/{ulid}:
    delete:
      deprecated: false
      description: "**Only the buyer/complainant** can dismiss the case immediately.\
        \ Otherwise, the support can but in a limited ranges of Dispute status."
      operationId: api_disputes_ulid_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Dispute identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Dispute resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_WRITE
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Abandon claims on Dispute
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a Dispute resource.
      operationId: api_disputes_ulid_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Dispute identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-Read'
          description: Dispute resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_READ
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Retrieves a Dispute resource.
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the Dispute resource.
      operationId: api_disputes_ulid_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Dispute identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dispute-Update'
        description: The updated Dispute resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute-Read'
          description: Dispute resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_ARBITRATION
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Update the Dispute
      tags:
      - Resolution-Center
      x-content-type: application/json
      x-accepts:
      - application/json
  /disputes/{ulid}/evaluations:
    post:
      deprecated: false
      description: '**Only authenticated** complainant and seller **CAN** issue an
        evaluation **WHEN** the dispute reached a final state.'
      operationId: api_disputes_ulidevaluations_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: Evaluation identifier
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evaluation-Write'
        description: The new Evaluation resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evaluation-Read'
          description: Evaluation resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
      summary: Submit an Evaluation for the Dispute
      tags:
      - Resolution-Center
      x-content-type: application/json
      x-accepts:
      - application/json
  /disputes/{ulid}/evidences:
    get:
      deprecated: false
      description: Retrieves the collection of Evidence resources.
      operationId: api_disputes_ulidevidences_get_collection
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Evidence-Read'
                type: array
          description: Evidence collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
        jwtPersonalKey: []
      summary: Retrieve all Evidences in Dispute
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: "This action does not held the actual upload, you will have to\
        \ do the upload in a dedicated request."
      operationId: api_disputes_ulidevidences_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evidence-Write'
        description: The new Evidence resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evidence-Read'
          description: Evidence resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
      summary: Submit an Evidence to the Dispute case
      tags:
      - Resolution-Center
      x-content-type: application/json
      x-accepts:
      - application/json
  /disputes/{ulid}/evidences/{id}:
    delete:
      deprecated: false
      description: Removes the Evidence resource.
      operationId: api_disputes_ulidevidences_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Evidence resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
        jwtPersonalKey: []
      summary: Withdraw an Evidence from a Dispute
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
  /disputes/{ulid}/evidences/{id}/media:
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_disputes_ulidevidences_idmedia_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_disputes_ulidevidences_idmedia_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
      summary: Upload attachment in regard of described Evidence
      tags:
      - Resolution-Center
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /disputes/{ulid}/parcels:
    get:
      deprecated: false
      description: Retrieves the collection of Parcel resources.
      operationId: api_disputes_ulidparcels_get_collection
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Parcel-CollectionRead'
                type: array
          description: Parcel collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_READ
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Retrieves the collection of Parcel resources.
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Parcel resource.
      operationId: api_disputes_ulidparcels_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parcel-Write'
        description: The new Parcel resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel-Read'
          description: Parcel resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - DISPUTE_WRITE
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Creates a Parcel resource.
      tags:
      - Resolution-Center
      x-content-type: application/json
      x-accepts:
      - application/json
  /disputes/{ulid}/parcels/{id}:
    delete:
      deprecated: false
      description: Removes the Parcel resource.
      operationId: api_disputes_ulidparcels_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Parcel resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the Parcel resource.
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
  /invite:
    post:
      deprecated: false
      description: Invite a user to your organization workspace
      operationId: api_invite_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Invite'
        description: The new User resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Organization invite
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /me:
    get:
      deprecated: false
      description: Retrieves a User resource.
      operationId: api_me_get
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-AuthenticatedRead'
          description: User resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves a User resource.
      tags:
      - User
      x-accepts:
      - application/json
  /offers/{ulid}/medias:
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_offers_ulidmedias_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_disputes_ulidevidences_idmedia_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        personaAuthKey: []
      summary: Upload a picture for a given Offer
      tags:
      - Resolution-Center
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /offers/{ulid}/medias/{id}:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_offers_ulidmedias_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: ulid
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - OFFER_WRITE
        personaAuthKey: []
        jwtPersonalKey: []
      summary: Removes the Media resource.
      tags:
      - Resolution-Center
      x-accepts:
      - application/json
  /organizations:
    get:
      deprecated: false
      description: Retrieves the collection of Organization resources.
      operationId: api_organizations_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The number of items per page
        explode: false
        in: query
        name: itemsPerPage
        required: false
        schema:
          default: 30
          minimum: 0
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization-CollectionRead'
                type: array
          description: Organization collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves the collection of Organization resources.
      tags:
      - Organization
      x-accepts:
      - application/json
  /organizations/{id}:
    get:
      deprecated: false
      description: Retrieves a Organization resource.
      operationId: api_organizations_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-Read'
          description: Organization resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves a Organization resource.
      tags:
      - Organization
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the Organization resource.
      operationId: api_organizations_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-Update'
        description: The updated Organization resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Organization-Read'
          description: Organization resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: "Update your Organization details, branding or parameters"
      tags:
      - Branding
      x-content-type: application/json
      x-accepts:
      - application/json
  /organizations/{id}/icon:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_organizations_idicon_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Unset your Organization Icon
      tags:
      - Branding
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_organizations_idicon_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_disputes_ulidevidences_idmedia_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload your Organization Icon
      tags:
      - Branding
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /organizations/{id}/logo:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_organizations_idlogo_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Unset your Organization Logo
      tags:
      - Branding
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_organizations_idlogo_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_disputes_ulidevidences_idmedia_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload your Organization logo
      tags:
      - Branding
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /personas:
    get:
      deprecated: false
      description: Retrieves the collection of Persona resources.
      operationId: api_personas_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "email[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: mobilePhoneNumber
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "mobilePhoneNumber[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of gender
        example: MALE
        explode: false
        in: query
        name: gender
        required: false
        schema:
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "order[createdAt]"
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "createdAt[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[strictly_before]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: "dateOfBirth[strictly_after]"
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Flattened OrderedMap for metadata. Must be a multiple of two
          items count. Explicitly set "null" for desired value.
        example:
        - External-ID
        - 1254A
        explode: true
        in: query
        name: "metadata[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Persona-CollectionRead'
                type: array
          description: Persona collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of Persona resources.
      tags:
      - Persona
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: |-
        You should not register your whole database of users, only those who are concerned by a Dispute operation.
        One Persona entry for your organization can be assigned as a seller or buyer.

        **Notes:**
          - (i) There is a unique constraint for the mobile phone numbers and email.
          - (ii) You will have to issue a DELETE operation on a Persona that withhold a specific phone number or email.
          - (iii) You are NOT REQUIRED to provide email OR a mobile phone number but it is highly recommended, if none provided the email will be generated as '{ulid}@your-domain.tld'. In that case, please specify at least one metadata in order to find your entry with ease.
      operationId: api_personas_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Write'
        description: The new Persona resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_WRITE
      summary: Register a Persona (Your customer)
      tags:
      - Persona
      x-content-type: application/json
      x-accepts:
      - application/json
  /personas/authentication:
    post:
      deprecated: false
      description: "Main route for Persona (Organization customers) to authenticate\
        \ themselves. Public access, captcha protected and MFA mandatory."
      operationId: api_personasauthentication_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-ExternalAuth'
        description: The new Persona resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-AuthReturn'
          description: Persona resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Persona Authentication
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /personas/me:
    get:
      deprecated: false
      description: Retrieves a Persona resource.
      operationId: api_personasme_get
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
      summary: Retrieve your authenticated Persona
      tags:
      - User
      x-accepts:
      - application/json
  /personas/register:
    post:
      deprecated: false
      description: Creates a Persona resource.
      operationId: api_personasregister_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Register'
        description: The new Persona resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Persona external registration
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /personas/{id}:
    delete:
      deprecated: false
      description: |-
        You **MAY** unregister (or free the email/phone number) your Persona entry using that endpoint.
        *Please note that* this operation will fail if that Persona have any ongoing operations.
      operationId: api_personas_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Persona resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_WRITE
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Unregister a Persona (Your customer)
      tags:
      - Persona
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a Persona resource.
      operationId: api_personas_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_READ
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Retrieves a Persona resource.
      tags:
      - Persona
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Update your Persona (eg. your customer/user entry) through that
        API call. _Beware that updating_ **email** and/or the **mobile phone number**
        must be done using non reserved values. Otherwise this operation will be rejected.
      operationId: api_personas_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-Update'
        description: The updated Persona resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-Read'
          description: Persona resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_WRITE
        jwtPersonalKey: []
        personaAuthKey: []
      summary: Updates the Persona resource.
      tags:
      - Persona
      x-content-type: application/json
      x-accepts:
      - application/json
  /personas/{id}/notifications:
    get:
      deprecated: false
      description: Retrieves the collection of Notification resources.
      operationId: api_personas_idnotifications_get_collection
      parameters:
      - allowReserved: false
        deprecated: false
        description: Notification identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification-Read'
                type: array
          description: Notification collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
      summary: Retrieve pending notifications for Persona
      tags:
      - Notification
      x-accepts:
      - application/json
  /personas/{id}/token:
    post:
      deprecated: false
      description: "Without this, your users may be required to pass a MFA challenge\
        \ even if they are already logged-in from your website. Pass the URL you wish\
        \ your user access, either a Dispute resource."
      operationId: api_personas_idtoken_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: Persona identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persona-TokenWrite'
        description: The new Persona resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persona-PostAuthRead'
          description: Persona resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - PERSONA_AUTH
      summary: Issue authenticated URL for single end-user
      tags:
      - Persona
      x-content-type: application/json
      x-accepts:
      - application/json
  /personas/{personaId}/notifications/{id}:
    patch:
      deprecated: false
      description: Updates the Notification resource.
      operationId: api_personas_personaIdnotifications_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Notification identifier
        explode: false
        in: path
        name: personaId
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: Notification identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification-Update'
        description: The updated Notification resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification-Read'
          description: Notification resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - personaAuthKey: []
      summary: Mark as read/unread a notification for Persona
      tags:
      - Notification
      x-content-type: application/json
      x-accepts:
      - application/json
  /register:
    post:
      deprecated: false
      description: "Internal-use only, protected by a captcha. Organization first-enrollment"
      operationId: api_register_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Write'
        description: The new User resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Organization onboarding
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users:
    get:
      deprecated: false
      description: Retrieves the collection of User resources.
      operationId: api_users_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User-CollectionRead'
                type: array
          description: User collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves the collection of User resources.
      tags:
      - User
      x-accepts:
      - application/json
  /users/{id}:
    delete:
      deprecated: false
      description: Removes the User resource.
      operationId: api_users_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the User resource.
      tags:
      - User
      x-accepts:
      - application/json
    get:
      deprecated: false
      description: Retrieves a User resource.
      operationId: api_users_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Retrieves a User resource.
      tags:
      - User
      x-accepts:
      - application/json
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-Update'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Updates the User resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/avatar:
    delete:
      deprecated: false
      description: Removes the Media resource.
      operationId: api_users_idavatar_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Media resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Unset your personal avatar
      tags:
      - User
      x-accepts:
      - application/json
    post:
      deprecated: false
      description: Creates a Media resource.
      operationId: api_users_idavatar_post
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/api_disputes_ulidevidences_idmedia_post_request'
        description: The binary media file as-is
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media-Read'
          description: Media resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Upload your personal avatar
      tags:
      - User
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
  /users/{id}/email:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idemail_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-UserEmailUpdate'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-UserRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Update user email
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/email-validation:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idemail-validation_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-EmailValidationWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-PostRegisterRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Validate email ownership
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/enable:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idenable_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-UserEnableWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-user.subscribed'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Updates the User resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/notifications:
    get:
      deprecated: false
      description: Retrieves the collection of Notification resources.
      operationId: api_users_idnotifications_get_collection
      parameters:
      - allowReserved: false
        deprecated: false
        description: Notification identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Notification-Read'
                type: array
          description: Notification collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Retrieves the collection of Notification resources.
      tags:
      - Notification
      x-accepts:
      - application/json
  /users/{id}/password:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idpassword_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-UserPasswordUpdate'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-UserRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Updates the User resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/totp-setup:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idtotp-setup_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-TotpSetupWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-TotpSetupRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Updates the User resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/totp-toggle:
    patch:
      deprecated: false
      description: Updates the User resource.
      operationId: api_users_idtotp-toggle_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: User identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-TotpToggleWrite'
        description: The updated User resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-TotpToggleRead'
          description: User resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      summary: Updates the User resource.
      tags:
      - User
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{userId}/notifications/{id}:
    patch:
      deprecated: false
      description: Updates the Notification resource.
      operationId: api_users_userIdnotifications_id_patch
      parameters:
      - allowReserved: false
        deprecated: false
        description: Notification identifier
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - allowReserved: false
        deprecated: false
        description: Notification identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification-Update'
        description: The updated Notification resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification-Read'
          description: Notification resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Mark as read/unread a notification for User
      tags:
      - Notification
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhook-histories:
    get:
      deprecated: false
      description: Retrieves the collection of WebhookHistory resources.
      operationId: api_webhook-histories_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "event[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: false
        in: query
        name: objectId
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: ""
        explode: true
        in: query
        name: "objectId[]"
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookHistory-CollectionRead'
                type: array
          description: WebhookHistory collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - ORGANIZATION_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of WebhookHistory resources.
      tags:
      - Webhook
      x-accepts:
      - application/json
  /webhook-histories/{id}:
    get:
      deprecated: false
      description: Retrieves a WebhookHistory resource.
      operationId: api_webhook-histories_id_get
      parameters:
      - allowReserved: false
        deprecated: false
        description: WebhookHistory identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookHistory-Read'
          description: WebhookHistory resource
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - ORGANIZATION_READ
        jwtPersonalKey: []
      summary: Retrieves a WebhookHistory resource.
      tags:
      - Webhook
      x-accepts:
      - application/json
    put:
      deprecated: false
      description: Replaces the WebhookHistory resource.
      operationId: api_webhook-histories_id_put
      parameters:
      - allowReserved: false
        deprecated: false
        description: WebhookHistory identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookHistory'
        description: The updated WebhookHistory resource
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookHistory-Read'
          description: WebhookHistory resource updated
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Replay a Webhook that ended up in failure
      tags:
      - Webhook
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhook-subscriptions:
    get:
      deprecated: false
      description: Retrieves the collection of WebhookSubscription resources.
      operationId: api_webhook-subscriptions_get_collection
      parameters:
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: The collection page number
        explode: false
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - allowEmptyValue: true
        allowReserved: false
        deprecated: false
        description: Filter on a limited subset of event
        example: dispute.opened
        explode: false
        in: query
        name: event
        required: false
        schema:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookSubscription-Read'
                type: array
          description: WebhookSubscription collection
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
            Content-Range:
              description: "HTTP standardized header for partial content, used for\
                \ the pagination"
              explode: false
              schema:
                example: 0-50/28441
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - oauth:
        - ORGANIZATION_READ
        jwtPersonalKey: []
      summary: Retrieves the collection of WebhookSubscription resources.
      tags:
      - Webhook
      x-accepts:
      - application/json
    post:
      callbacks:
        onData:
          '{$request.body#/callbackUrl}':
            post:
              description: |-
                The received payload MUST be verified using hmac-sha256.
                                            The actual checksum/sha256 to match is located in X-Tripartie-Signature header.
              operationId: onData_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Webhook'
              responses:
                "200":
                  description: Your endpoint MUST respond with ANY successful http
                    code in the 2XX range. Will be re-sent up to 8 times otherwise.
              x-callback-request: true
      deprecated: false
      description: Creates a WebhookSubscription resource.
      operationId: api_webhook-subscriptions_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscription-Write'
        description: The new WebhookSubscription resource
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscription-Read'
          description: WebhookSubscription resource created
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidQueryError'
          description: Invalid input
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntity'
          description: Unprocessable entity
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Subscribe to Event(s)
      tags:
      - Webhook
      x-content-type: application/json
      x-accepts:
      - application/json
  /webhook-subscriptions/{id}:
    delete:
      deprecated: false
      description: Removes the WebhookSubscription resource.
      operationId: api_webhook-subscriptions_id_delete
      parameters:
      - allowReserved: false
        deprecated: false
        description: WebhookSubscription identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: WebhookSubscription resource deleted
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: Resource not found
          headers:
            X-Rate-Limit:
              description: HTTP standardized header for rate limit consumption status
              explode: false
              schema:
                example: 554; reset="2025-01-12T12:11:02"
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
          description: Authentication required
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessError'
          description: Unauthorized access
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitError'
          description: Rate limit exhausted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
          description: Unexpected server error
      security:
      - jwtPersonalKey: []
      summary: Removes the WebhookSubscription resource.
      tags:
      - Webhook
      x-accepts:
      - application/json
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    Address:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
    ApiClient-PostCreationRead:
      deprecated: false
      description: ""
      example:
        identifier: identifier
        name: name
        secret: secret
      properties:
        identifier:
          type: string
        secret:
          nullable: true
          type: string
          nullable: false
        name:
          type: string
    ApiClient-Read:
      deprecated: false
      description: ""
      example:
        identifier: identifier
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        scopes:
        - DISPUTE_READ
        - ORGANIZATION_READ
      properties:
        identifier:
          maxLength: 32
          type: string
        createdAt:
          format: date-time
          type: string
        scopes:
          example:
          - DISPUTE_READ
          - ORGANIZATION_READ
          items:
            enum:
            - DISPUTE_READ
            - DISPUTE_WRITE
            - PERSONA_READ
            - PERSONA_WRITE
            - PERSONA_AUTH
            - OFFER_READ
            - OFFER_WRITE
            - ORGANIZATION_READ
            - INTERNAL_WRITE
            type: string
          type: array
        name:
          type: string
      required:
      - createdAt
      - identifier
    ApiClient-Write:
      deprecated: false
      description: ""
      properties:
        referenceName:
          maxLength: 32
          nullable: true
          type: string
        desiredScopes:
          example:
          - OFFER_READ
          - DISPUTE_WRITE
          items:
            enum:
            - OFFER_READ
            - OFFER_WRITE
            - DISPUTE_READ
            - DISPUTE_WRITE
            - ORGANIZATION_READ
            - PERSONA_READ
            - PERSONA_WRITE
            - PERSONA_AUTH
            type: string
          minItems: 1
          type: array
    Dispute-Address-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Dispute-CollectionRead:
      deprecated: false
      description: Access directly our resolution center without having used the safe-checkout
        feature.
      example:
        chosenSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
        iri: https://example.com/
        closedInFavorOf: BUYER
        messageCount: 6
        ulid: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        platformApproval: true
        platformPartialRefundAmount: 6
        platformActorType: RULING
        awaitedParty: BUYER
        chosenPartialRefundAmount: 40
        statusExpiration: 2000-01-23T04:56:07.000+00:00
        itemCount: 1
        issueType: NOT_AS_DESCRIBED
        issueMentionedInOffer: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        platformSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
        issueInDescriptionType: WRONG_COLOUR
        complainantStake: LOW
        inferredStake: LOW
        transaction:
          offer:
            seller:
              firstName: John
              lastName: Doe
              id: 0
            unitPrice: 125.54
            condition: USED
            ulid: ulid
            publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
            title: ASUS TUF X570-PLUS GAMING Motherboard
            currencyCode: EUR
            itemCount: 1
          ulid: ulid
          buyer:
            firstName: John
            lastName: Doe
            id: 0
        status: CREATED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        transaction:
          $ref: '#/components/schemas/Dispute-Transaction-CollectionRead'
        status:
          default: CREATED
          enum:
          - CREATED
          - SUBMITTED
          - OPENED
          - ABANDONED
          - OBJECTED
          - PENDING_SHIPMENT
          - SHIPPED
          - IN_TRANSIT
          - RETURNED
          - DISMISSED
          - RESOLVED
          - PENDING
          example: CREATED
          type: string
        itemCount:
          description: The dispute may concern only PART of the package. Specify it
            there.
          example: 1
          nullable: true
          type: integer
        issueType:
          enum:
          - NOT_AS_DESCRIBED
          - DOES_NOT_WORK
          - IS_INCOMPLETE
          - DELIVERY_ISSUE
          - ALLEGED_FRAUD
          - null
          nullable: true
          type: string
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          enum:
          - WRONG_COLOUR
          - DAMAGED_OR_USED
          - INCORRECT_FORMAT_OR_SIZE
          - DIFFERENT_MATERIAL
          - null
          nullable: true
          type: string
        issueMentionedInOffer:
          nullable: true
          type: boolean
        complainantStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        inferredStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        chosenSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        chosenPartialRefundAmount:
          example: 40
          nullable: true
          type: integer
        platformSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        platformPartialRefundAmount:
          nullable: true
          type: integer
        platformApproval:
          nullable: true
          type: boolean
        platformActorType:
          enum:
          - RULING
          - AI
          - CUSTOMER_CARE
          - PLATFORM_SUPPORT
          - null
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        statusExpiration:
          description: Yield if eligible the date-time at which the dispute state
            expire.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        awaitedParty:
          description: Determine who is awaited (actor) for the next transition
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        messageCount:
          example: 6
          readOnly: true
          type: integer
        closedInFavorOf:
          description: "Determine who won the case, if not specified, then it is ongoing."
          enum:
          - BUYER
          - SELLER
          readOnly: true
          type: string
          nullable: true
      required:
      - status
      - ulid
    Dispute-IndependentWrite:
      deprecated: false
      description: Access directly our resolution center without having used the safe-checkout
        feature.
      properties:
        transaction:
          $ref: '#/components/schemas/Dispute-Transaction-IndependentWrite'
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/Dispute-Metadata-IndependentWrite'
          maxItems: 16
          type: array
      required:
      - transaction
    Dispute-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Dispute-Metadata-IndependentWrite:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Dispute-Metadata-Read:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Dispute-Offer-CollectionRead:
      deprecated: false
      description: ""
      example:
        seller:
          firstName: John
          lastName: Doe
          id: 0
        unitPrice: 125.54
        condition: USED
        ulid: ulid
        publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
        title: ASUS TUF X570-PLUS GAMING Motherboard
        currencyCode: EUR
        itemCount: 1
      properties:
        ulid:
          type: string
        publicUrl:
          description: "If specified, there would be not need for you to fill-in details.\
            \ Must be accessible over WAN."
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        seller:
          $ref: '#/components/schemas/Dispute-Persona-CollectionRead'
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        unitPrice:
          example: 125.54
          nullable: true
          type: number
        currencyCode:
          default: EUR
          example: EUR
          nullable: true
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
      required:
      - seller
      - ulid
    Dispute-Offer-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        publicUrl:
          description: "If specified, there would be not need for you to fill-in details.\
            \ Must be accessible over WAN."
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        seller:
          $ref: '#/components/schemas/Dispute-Persona-IndependentWrite'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          example: 125.54
          nullable: true
          type: number
        currencyCode:
          default: EUR
          example: EUR
          nullable: true
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        weightInGram:
          nullable: true
          type: integer
        eanCode:
          example: "4718017388450"
          nullable: true
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/Dispute-Metadata-IndependentWrite'
          type: array
      required:
      - nature
      - seller
    Dispute-Offer-Read:
      deprecated: false
      description: ""
      example:
        seller:
          firstName: John
          lastName: Doe
          mobilePhoneNumber: "+33745214529"
          language: fr
          id: 0
          email: john.doe@gmail.com
        unitPrice: 125.54
        medias:
        - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        condition: USED
        ulid: ulid
        nature: physical_item
        organization:
          directNotificationToggle: true
          flatRateEnabled: true
          websiteUrl: websiteUrl
          counterProposalToggle: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          primaryColor: primaryColor
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          customBaseUrl: customBaseUrl
          personaAuthPortalToggle: true
        publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
        description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\
          \ do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
          \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
          \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
          \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
          \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
          \ id est laborum."
        title: ASUS TUF X570-PLUS GAMING Motherboard
        currencyCode: EUR
        itemCount: 1
      properties:
        ulid:
          type: string
        publicUrl:
          description: "If specified, there would be not need for you to fill-in details.\
            \ Must be accessible over WAN."
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        organization:
          $ref: '#/components/schemas/Dispute-Organization-Read'
        seller:
          $ref: '#/components/schemas/Dispute-Persona-Read'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          example: 125.54
          nullable: true
          type: number
        currencyCode:
          default: EUR
          example: EUR
          nullable: true
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        medias:
          items:
            $ref: '#/components/schemas/Dispute-Media-Read'
          type: array
      required:
      - medias
      - nature
      - seller
      - ulid
    Dispute-Organization-Read:
      deprecated: false
      description: ""
      example:
        directNotificationToggle: true
        flatRateEnabled: true
        websiteUrl: websiteUrl
        counterProposalToggle: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        primaryColor: primaryColor
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        customBaseUrl: customBaseUrl
        personaAuthPortalToggle: true
      properties:
        name:
          type: string
        websiteUrl:
          nullable: true
          type: string
        customBaseUrl:
          nullable: true
          type: string
        icon:
          $ref: '#/components/schemas/Dispute-Media-Read'
        logo:
          $ref: '#/components/schemas/Dispute-Media-Read'
        primaryColor:
          nullable: true
          type: string
        directNotificationToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - counterProposalToggle
      - directNotificationToggle
      - personaAuthPortalToggle
    Dispute-Parcel-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        carrier:
          enum:
          - SwissPost
          - MondialRelay
          - Colissimo
          - Dhl
          - Chronopost
          - ColisPrive
          - Dpd
          - Ups
          - FedEx
          - RelaisColis
          type: string
        identifier:
          example: 8J001271466474
          type: string
        price:
          example: 4.88
          nullable: true
          type: number
        refundable:
          type: boolean
        currency:
          default: EUR
          example: EUR
          nullable: true
          type: string
      required:
      - refundable
    Dispute-Parcel-Read:
      deprecated: false
      description: ""
      example:
        identifier: 8J001271466474
        createdAt: 2000-01-23T04:56:07.000+00:00
        carrier: SwissPost
        price: 4.88
        refundable: true
        currency: EUR
        status: CREATED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        carrier:
          enum:
          - SwissPost
          - MondialRelay
          - Colissimo
          - Dhl
          - Chronopost
          - ColisPrive
          - Dpd
          - Ups
          - FedEx
          - RelaisColis
          type: string
        identifier:
          example: 8J001271466474
          maxLength: 128
          minLength: 4
          type: string
        price:
          example: 4.88
          minimum: 0
          nullable: true
          type: number
        refundable:
          type: boolean
        currency:
          default: EUR
          example: EUR
          externalDocs:
            url: https://schema.org/priceCurrency
          nullable: true
          type: string
        status:
          enum:
          - CREATED
          - SHIPPED
          - IN_TRANSIT
          - DELIVERED
          - ERROR
          - ACCEPTED
          - REFUSED
          - null
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - carrier
      - identifier
    Dispute-Persona-CollectionRead:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
    Dispute-Persona-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth:
          format: date
          nullable: true
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Dispute-Address-IndependentWrite'
        externalPurchaseCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          minimum: 0
          type: integer
        externalSellCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          minimum: 0
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Dispute-Metadata-IndependentWrite'
          maxItems: 16
          type: array
      required:
      - firstName
      - gender
      - lastName
    Dispute-Persona-Read:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        mobilePhoneNumber: "+33745214529"
        language: fr
        id: 0
        email: john.doe@gmail.com
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
    Dispute-PostCreationRead:
      deprecated: false
      description: Access directly our resolution center without having used the safe-checkout
        feature.
      example:
        sellerId: 58
        ulid: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        offerUlid: 01H9QDHBE084BQJN7ME31QSVWS
        buyerId: 42
        url: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        url:
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          nullable: true
          type: string
        buyerId:
          example: 42
          nullable: true
          readOnly: true
          type: integer
        sellerId:
          example: 58
          nullable: true
          readOnly: true
          type: integer
        offerUlid:
          example: 01H9QDHBE084BQJN7ME31QSVWS
          nullable: true
          readOnly: true
          type: string
    Dispute-Read:
      deprecated: false
      description: Access directly our resolution center without having used the safe-checkout
        feature.
      example:
        counterSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        redirectUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
        messageCount: 6
        ulid: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        platformApproval: true
        platformReasoning: The buyer does not respect our terms of service.
        issueMentionedInOffer: true
        sellerApproval: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        platformSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
        complainantStake: LOW
        inferredStake: LOW
        viewCount: 5
        views:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          hitCount: 1
          namedSource: BUYER
        - createdAt: 2000-01-23T04:56:07.000+00:00
          hitCount: 1
          namedSource: BUYER
        events:
        - occurredAt: 2000-01-23T04:56:07.000+00:00
          initiator: https://example.com/
          from: from
          label: label
          to: to
          event: dispute.opened
        - occurredAt: 2000-01-23T04:56:07.000+00:00
          initiator: https://example.com/
          from: from
          label: label
          to: to
          event: dispute.opened
        updatedAt: 2000-01-23T04:56:07.000+00:00
        chosenSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
        iri: https://example.com/
        closedInFavorOf: BUYER
        counterPartialRefundAmount: 30
        sellerTruthfulnessScore: 100
        recommendedSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
        platformPartialRefundAmount: 1
        platformActorType: RULING
        arbitrationBy: https://example.com/
        awaitedParty: BUYER
        issueDetails: "The item received have multiple impacts on the left side, this\
          \ was not mentioned and I feel a bit sad. Although it is usable as-is, I\
          \ expected it without flaws."
        chosenPartialRefundAmount: 40
        statusExpiration: 2000-01-23T04:56:07.000+00:00
        itemCount: 1
        complainantApproval: true
        maxRefundableForBuyer: 2.3021358869347655
        issueType: NOT_AS_DESCRIBED
        sellerNotes: "Unfortunately, I did not notice it, after thinking again, yes,\
          \ you deserve a discount on that."
        recommendedPartialRefundAmount: 35
        disbursedByBuyer: 5.637376656633329
        sellerRejectionReason: UNJUSTIFIED_REQUEST
        issueInDescriptionType: WRONG_COLOUR
        transaction:
          offer:
            seller:
              firstName: John
              lastName: Doe
              mobilePhoneNumber: "+33745214529"
              language: fr
              id: 0
              email: john.doe@gmail.com
            unitPrice: 125.54
            medias:
            - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            condition: USED
            ulid: ulid
            nature: physical_item
            organization:
              directNotificationToggle: true
              flatRateEnabled: true
              websiteUrl: websiteUrl
              counterProposalToggle: true
              name: name
              icon:
                publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              primaryColor: primaryColor
              logo:
                publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              customBaseUrl: customBaseUrl
              personaAuthPortalToggle: true
            publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
            description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit,\
              \ sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\
              \ Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\
              \ nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\
              \ reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\
              \ pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\
              \ culpa qui officia deserunt mollit anim id est laborum."
            title: ASUS TUF X570-PLUS GAMING Motherboard
            currencyCode: EUR
            itemCount: 1
          fees: 6.027456183070403
          refundableFees: true
          metadata:
          - value: "54412"
            key: External-ID
          - value: "54412"
            key: External-ID
          ulid: ulid
          buyer:
            firstName: John
            lastName: Doe
            mobilePhoneNumber: "+33745214529"
            language: fr
            id: 0
            email: john.doe@gmail.com
          parcels:
          - identifier: 8J001271466474
            createdAt: 2000-01-23T04:56:07.000+00:00
            carrier: SwissPost
            price: 4.88
            refundable: true
            currency: EUR
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - identifier: 8J001271466474
            createdAt: 2000-01-23T04:56:07.000+00:00
            carrier: SwissPost
            price: 4.88
            refundable: true
            currency: EUR
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        status: CREATED
        complainantTruthfulnessScore: 100
        parcels:
        - identifier: 8J001271466474
          createdAt: 2000-01-23T04:56:07.000+00:00
          carrier: SwissPost
          price: 4.88
          refundable: true
          currency: EUR
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - identifier: 8J001271466474
          createdAt: 2000-01-23T04:56:07.000+00:00
          carrier: SwissPost
          price: 4.88
          refundable: true
          currency: EUR
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        transaction:
          $ref: '#/components/schemas/Dispute-Transaction-Read'
        status:
          default: CREATED
          enum:
          - CREATED
          - SUBMITTED
          - OPENED
          - ABANDONED
          - OBJECTED
          - PENDING_SHIPMENT
          - SHIPPED
          - IN_TRANSIT
          - RETURNED
          - DISMISSED
          - RESOLVED
          - PENDING
          example: CREATED
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          nullable: true
          type: string
        itemCount:
          description: The dispute may concern only PART of the package. Specify it
            there.
          example: 1
          nullable: true
          type: integer
        issueType:
          enum:
          - NOT_AS_DESCRIBED
          - DOES_NOT_WORK
          - IS_INCOMPLETE
          - DELIVERY_ISSUE
          - ALLEGED_FRAUD
          - null
          nullable: true
          type: string
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          enum:
          - WRONG_COLOUR
          - DAMAGED_OR_USED
          - INCORRECT_FORMAT_OR_SIZE
          - DIFFERENT_MATERIAL
          - null
          nullable: true
          type: string
        issueMentionedInOffer:
          nullable: true
          type: boolean
        issueDetails:
          example: "The item received have multiple impacts on the left side, this\
            \ was not mentioned and I feel a bit sad. Although it is usable as-is,\
            \ I expected it without flaws."
          nullable: true
          type: string
        complainantTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        sellerTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        complainantStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        inferredStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        recommendedSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        recommendedPartialRefundAmount:
          example: 35
          nullable: true
          type: integer
        chosenSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        chosenPartialRefundAmount:
          example: 40
          nullable: true
          type: integer
        counterSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        counterPartialRefundAmount:
          example: 30
          nullable: true
          type: integer
        sellerNotes:
          example: "Unfortunately, I did not notice it, after thinking again, yes,\
            \ you deserve a discount on that."
          nullable: true
          type: string
        sellerRejectionReason:
          enum:
          - UNJUSTIFIED_REQUEST
          - ABUSIVE_REQUEST
          - FRAUD_ATTEMPT
          - OTHER
          - null
          nullable: true
          type: string
        complainantApproval:
          nullable: true
          type: boolean
        sellerApproval:
          nullable: true
          type: boolean
        platformSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        platformPartialRefundAmount:
          nullable: true
          type: integer
        platformApproval:
          nullable: true
          type: boolean
        platformActorType:
          enum:
          - RULING
          - AI
          - CUSTOMER_CARE
          - PLATFORM_SUPPORT
          - null
          nullable: true
          type: string
        platformReasoning:
          description: "Explicit additional information about the platform decision.\
            \ Could be written by AI, Ruling or Customer Care."
          example: The buyer does not respect our terms of service.
          nullable: true
          type: string
        arbitrationBy:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        parcels:
          items:
            $ref: '#/components/schemas/Dispute-Parcel-Read'
          type: array
        views:
          items:
            $ref: '#/components/schemas/Dispute-View-Read'
          type: array
        metadata:
          items:
            $ref: '#/components/schemas/Dispute-Metadata-Read'
          type: array
        events:
          items:
            $ref: '#/components/schemas/Dispute-WorkflowEvent-Read'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        viewCount:
          readOnly: true
          type: integer
        statusExpiration:
          description: Yield if eligible the date-time at which the dispute state
            expire.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        awaitedParty:
          description: Determine who is awaited (actor) for the next transition
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        messageCount:
          example: 6
          readOnly: true
          type: integer
        closedInFavorOf:
          description: "Determine who won the case, if not specified, then it is ongoing."
          enum:
          - BUYER
          - SELLER
          readOnly: true
          type: string
          nullable: true
        disbursedByBuyer:
          description: Total amount disbursed by the buyer to acquire the item.
          nullable: true
          readOnly: true
          type: number
        maxRefundableForBuyer:
          description: How much the buyer can actually receive back in case of a full
            refund.
          nullable: true
          readOnly: true
          type: number
      required:
      - complainantTruthfulnessScore
      - metadata
      - parcels
      - sellerTruthfulnessScore
      - status
      - ulid
      - views
    Dispute-Transaction-CollectionRead:
      deprecated: false
      description: ""
      example:
        offer:
          seller:
            firstName: John
            lastName: Doe
            id: 0
          unitPrice: 125.54
          condition: USED
          ulid: ulid
          publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          title: ASUS TUF X570-PLUS GAMING Motherboard
          currencyCode: EUR
          itemCount: 1
        ulid: ulid
        buyer:
          firstName: John
          lastName: Doe
          id: 0
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Dispute-Offer-CollectionRead'
        buyer:
          $ref: '#/components/schemas/Dispute-Persona-CollectionRead'
      required:
      - buyer
      - offer
      - ulid
    Dispute-Transaction-IndependentWrite:
      deprecated: false
      description: ""
      properties:
        offer:
          $ref: '#/components/schemas/Dispute-Offer-IndependentWrite'
        buyer:
          $ref: '#/components/schemas/Dispute-Persona-IndependentWrite'
        fees:
          nullable: true
          type: number
        refundableFees:
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Dispute-Metadata-IndependentWrite'
          type: array
        parcels:
          items:
            $ref: '#/components/schemas/Dispute-Parcel-IndependentWrite'
          type: array
      required:
      - buyer
      - offer
    Dispute-Transaction-Read:
      deprecated: false
      description: ""
      example:
        offer:
          seller:
            firstName: John
            lastName: Doe
            mobilePhoneNumber: "+33745214529"
            language: fr
            id: 0
            email: john.doe@gmail.com
          unitPrice: 125.54
          medias:
          - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          condition: USED
          ulid: ulid
          nature: physical_item
          organization:
            directNotificationToggle: true
            flatRateEnabled: true
            websiteUrl: websiteUrl
            counterProposalToggle: true
            name: name
            icon:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            primaryColor: primaryColor
            logo:
              publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
            customBaseUrl: customBaseUrl
            personaAuthPortalToggle: true
          publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\
            \ do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          title: ASUS TUF X570-PLUS GAMING Motherboard
          currencyCode: EUR
          itemCount: 1
        fees: 6.027456183070403
        refundableFees: true
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        ulid: ulid
        buyer:
          firstName: John
          lastName: Doe
          mobilePhoneNumber: "+33745214529"
          language: fr
          id: 0
          email: john.doe@gmail.com
        parcels:
        - identifier: 8J001271466474
          createdAt: 2000-01-23T04:56:07.000+00:00
          carrier: SwissPost
          price: 4.88
          refundable: true
          currency: EUR
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - identifier: 8J001271466474
          createdAt: 2000-01-23T04:56:07.000+00:00
          carrier: SwissPost
          price: 4.88
          refundable: true
          currency: EUR
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Dispute-Offer-Read'
        buyer:
          $ref: '#/components/schemas/Dispute-Persona-Read'
        fees:
          nullable: true
          type: number
        refundableFees:
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Dispute-Metadata-Read'
          type: array
        parcels:
          items:
            $ref: '#/components/schemas/Dispute-Parcel-Read'
          type: array
      required:
      - buyer
      - offer
      - ulid
    Dispute-Update:
      deprecated: false
      description: Access directly our resolution center without having used the safe-checkout
        feature.
      properties:
        itemCount:
          description: The dispute may concern only PART of the package. Specify it
            there.
          example: 1
          nullable: true
          type: integer
        issueType:
          enum:
          - NOT_AS_DESCRIBED
          - DOES_NOT_WORK
          - IS_INCOMPLETE
          - DELIVERY_ISSUE
          - ALLEGED_FRAUD
          - null
          nullable: true
          type: string
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          enum:
          - WRONG_COLOUR
          - DAMAGED_OR_USED
          - INCORRECT_FORMAT_OR_SIZE
          - DIFFERENT_MATERIAL
          - null
          nullable: true
          type: string
        issueMentionedInOffer:
          nullable: true
          type: boolean
        issueDetails:
          example: "The item received have multiple impacts on the left side, this\
            \ was not mentioned and I feel a bit sad. Although it is usable as-is,\
            \ I expected it without flaws."
          maxLength: 1000
          minLength: 30
          nullable: true
          type: string
        complainantStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        chosenSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        chosenPartialRefundAmount:
          example: 40
          nullable: true
          type: integer
        counterSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        counterPartialRefundAmount:
          example: 30
          nullable: true
          type: integer
        sellerNotes:
          example: "Unfortunately, I did not notice it, after thinking again, yes,\
            \ you deserve a discount on that."
          maxLength: 1000
          minLength: 30
          nullable: true
          type: string
        sellerRejectionReason:
          enum:
          - UNJUSTIFIED_REQUEST
          - ABUSIVE_REQUEST
          - FRAUD_ATTEMPT
          - OTHER
          - null
          nullable: true
          type: string
        complainantApproval:
          nullable: true
          type: boolean
        sellerApproval:
          nullable: true
          type: boolean
        platformSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        platformPartialRefundAmount:
          nullable: true
          type: integer
        platformApproval:
          nullable: true
          type: boolean
        platformReasoning:
          description: "Explicit additional information about the platform decision.\
            \ Could be written by AI, Ruling or Customer Care."
          example: The buyer does not respect our terms of service.
          maxLength: 1000
          minLength: 30
          nullable: true
          type: string
    Dispute-View-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        hitCount: 1
        namedSource: BUYER
      properties:
        hitCount:
          default: 1
          example: 1
          type: integer
        createdAt:
          format: date-time
          readOnly: true
          type: string
        namedSource:
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          - OTHER
          readOnly: true
          type: string
          nullable: true
      required:
      - hitCount
    Dispute-WorkflowEvent-Read:
      deprecated: false
      description: ""
      example:
        occurredAt: 2000-01-23T04:56:07.000+00:00
        initiator: https://example.com/
        from: from
        label: label
        to: to
        event: dispute.opened
      properties:
        label:
          type: string
        from:
          nullable: true
          type: string
        to:
          nullable: true
          type: string
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          - null
          nullable: true
          type: string
        occurredAt:
          format: date-time
          readOnly: true
          type: string
        initiator:
          example: https://example.com/
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
      - label
    Dispute-dispute.read:
      deprecated: false
      description: Access directly our resolution center without having used the safe-checkout
        feature.
      properties:
        ulid:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        transaction:
          $ref: '#/components/schemas/Transaction-dispute.read'
        status:
          default: CREATED
          enum:
          - CREATED
          - SUBMITTED
          - OPENED
          - ABANDONED
          - OBJECTED
          - PENDING_SHIPMENT
          - SHIPPED
          - IN_TRANSIT
          - RETURNED
          - DISMISSED
          - RESOLVED
          - PENDING
          example: CREATED
          type: string
        redirectUrl:
          description: Fill-in that field IF you intend to redirect your customer
            instead of using a WebView.
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          nullable: true
          type: string
        itemCount:
          description: The dispute may concern only PART of the package. Specify it
            there.
          example: 1
          nullable: true
          type: integer
        issueType:
          enum:
          - NOT_AS_DESCRIBED
          - DOES_NOT_WORK
          - IS_INCOMPLETE
          - DELIVERY_ISSUE
          - ALLEGED_FRAUD
          - null
          nullable: true
          type: string
        issueInDescriptionType:
          description: To be set only in conjunction of issueType = NOT_AS_DESCRIBED.
          enum:
          - WRONG_COLOUR
          - DAMAGED_OR_USED
          - INCORRECT_FORMAT_OR_SIZE
          - DIFFERENT_MATERIAL
          - null
          nullable: true
          type: string
        issueMentionedInOffer:
          nullable: true
          type: boolean
        issueDetails:
          example: "The item received have multiple impacts on the left side, this\
            \ was not mentioned and I feel a bit sad. Although it is usable as-is,\
            \ I expected it without flaws."
          nullable: true
          type: string
        complainantTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        sellerTruthfulnessScore:
          default: 100
          example: 100
          type: integer
        complainantStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        inferredStake:
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        recommendedSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        recommendedPartialRefundAmount:
          example: 35
          nullable: true
          type: integer
        chosenSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        chosenPartialRefundAmount:
          example: 40
          nullable: true
          type: integer
        counterSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        counterPartialRefundAmount:
          example: 30
          nullable: true
          type: integer
        sellerNotes:
          example: "Unfortunately, I did not notice it, after thinking again, yes,\
            \ you deserve a discount on that."
          nullable: true
          type: string
        sellerRejectionReason:
          enum:
          - UNJUSTIFIED_REQUEST
          - ABUSIVE_REQUEST
          - FRAUD_ATTEMPT
          - OTHER
          - null
          nullable: true
          type: string
        complainantApproval:
          nullable: true
          type: boolean
        sellerApproval:
          nullable: true
          type: boolean
        platformSolution:
          enum:
          - PARTIAL_REFUND_WITH_PARTIAL_RETURN
          - PARTIAL_REFUND_WITHOUT_RETURN
          - COMPLETE_REFUND_WITH_RETURN
          - COMPLETE_REFUND_WITHOUT_RETURN
          - ABANDON_CLAIM
          - null
          nullable: true
          type: string
        platformPartialRefundAmount:
          nullable: true
          type: integer
        platformApproval:
          nullable: true
          type: boolean
        platformActorType:
          enum:
          - RULING
          - AI
          - CUSTOMER_CARE
          - PLATFORM_SUPPORT
          - null
          nullable: true
          type: string
        platformReasoning:
          description: "Explicit additional information about the platform decision.\
            \ Could be written by AI, Ruling or Customer Care."
          example: The buyer does not respect our terms of service.
          nullable: true
          type: string
        arbitrationBy:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        parcels:
          items:
            $ref: '#/components/schemas/Parcel-dispute.read'
          type: array
        views:
          items:
            $ref: '#/components/schemas/View-dispute.read'
          type: array
        metadata:
          items:
            $ref: '#/components/schemas/Metadata-dispute.read'
          type: array
        events:
          items:
            $ref: '#/components/schemas/WorkflowEvent-dispute.read'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        viewCount:
          readOnly: true
          type: integer
        statusExpiration:
          description: Yield if eligible the date-time at which the dispute state
            expire.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        awaitedParty:
          description: Determine who is awaited (actor) for the next transition
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        messageCount:
          example: 6
          readOnly: true
          type: integer
        closedInFavorOf:
          description: "Determine who won the case, if not specified, then it is ongoing."
          enum:
          - BUYER
          - SELLER
          readOnly: true
          type: string
          nullable: true
        disbursedByBuyer:
          description: Total amount disbursed by the buyer to acquire the item.
          nullable: true
          readOnly: true
          type: number
        maxRefundableForBuyer:
          description: How much the buyer can actually receive back in case of a full
            refund.
          nullable: true
          readOnly: true
          type: number
      required:
      - complainantTruthfulnessScore
      - metadata
      - parcels
      - sellerTruthfulnessScore
      - status
      - ulid
      - views
    Evaluation-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        rating: 7
        comment: "quickly handled and despite a minor issue, everything did go well\
          \ enough!"
      properties:
        rating:
          example: 7
          maximum: 10
          minimum: 0
          type: integer
        comment:
          example: "quickly handled and despite a minor issue, everything did go well\
            \ enough!"
          maxLength: 500
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - rating
    Evaluation-Write:
      deprecated: false
      description: ""
      properties:
        rating:
          example: 7
          maximum: 10
          minimum: 0
          type: integer
        comment:
          example: "quickly handled and despite a minor issue, everything did go well\
            \ enough!"
          maxLength: 500
          nullable: true
          type: string
      required:
      - rating
    Evidence:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        dispute:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        owner:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        status:
          default: SUBMITTED
          enum:
          - SUBMITTED
          - CORRELATED
          - UNRELATED
          - PENDING
          - TEMPERED
          - REJECTED
          example: SUBMITTED
          type: string
        media:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        additionalInformation:
          description: Description of what the evidence actually is.
          example: "The motherboard I received have a minor scratch at the bottom,\
            \ here is the proof."
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        publisher:
          description: Shortcut to whomever sent the evidence
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
      required:
      - status
    Evidence-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Evidence-Read:
      deprecated: false
      description: ""
      example:
        additionalInformation: "The motherboard I received have a minor scratch at\
          \ the bottom, here is the proof."
        createdAt: 2000-01-23T04:56:07.000+00:00
        publisher: BUYER
        id: 0
        media:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        status: SUBMITTED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        status:
          default: SUBMITTED
          enum:
          - SUBMITTED
          - CORRELATED
          - UNRELATED
          - PENDING
          - TEMPERED
          - REJECTED
          example: SUBMITTED
          type: string
        media:
          $ref: '#/components/schemas/Evidence-Media-Read'
        additionalInformation:
          description: Description of what the evidence actually is.
          example: "The motherboard I received have a minor scratch at the bottom,\
            \ here is the proof."
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        publisher:
          description: Shortcut to whomever sent the evidence
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          readOnly: true
          type: string
          nullable: true
      required:
      - status
    Evidence-Write:
      deprecated: false
      description: ""
      properties:
        additionalInformation:
          description: Description of what the evidence actually is.
          example: "The motherboard I received have a minor scratch at the bottom,\
            \ here is the proof."
          maxLength: 500
          minLength: 10
          type: string
      required:
      - additionalInformation
    Media:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        extension:
          type: string
        filename:
          type: string
        fingerprint:
          type: string
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
        file:
          format: binary
          nullable: true
          type: string
        b64EncodedTmpFile:
          nullable: true
          type: string
        thumbnail:
          description: Associated 374x374 pixels small thumbnail
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        original:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        owner:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        offers:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        thumbnailUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          readOnly: true
          type: string
      required:
      - extension
      - filename
      - fingerprint
      - publicUrl
    Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        thumbnailUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          type: string
        thumbnailUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          nullable: true
          readOnly: true
          type: string
    Media-UserRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Media-dispute.read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Metadata:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        persona:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        dispute:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        offer:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        transaction:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Metadata-dispute.read:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Notification-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        type: DISPUTE_STATE_UPDATE
        seen: true
      properties:
        type:
          enum:
          - DISPUTE_STATE_UPDATE
          - DISPUTE_REMINDER
          - MESSAGE_SENT
          - DISPUTE_SETTLEMENT
          - DISPUTE_ARBITRATION_REQUIRED
          - DISPUTE_RESOLVED
          type: string
        seen:
          type: boolean
        createdAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - seen
    Notification-Update:
      deprecated: false
      description: ""
      properties:
        seen:
          type: boolean
      required:
      - seen
    Offer-dispute.read:
      deprecated: false
      description: ""
      properties:
        ulid:
          type: string
        publicUrl:
          description: "If specified, there would be not need for you to fill-in details.\
            \ Must be accessible over WAN."
          example: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
          nullable: true
          type: string
        organization:
          $ref: '#/components/schemas/Organization-dispute.read'
        seller:
          $ref: '#/components/schemas/Persona-dispute.read'
        nature:
          default: physical_item
          description: This WILL affect the assigned workflow. Choosing service will
            disable delivery for example. Refer to our technical hub for more information.
          enum:
          - service
          - physical_item
          - dematerialized_item
          - rent_item
          example: physical_item
          type: string
        title:
          example: ASUS TUF X570-PLUS GAMING Motherboard
          type: string
        description:
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\
            \ eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\
            \ ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\
            \ ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\
            \ velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\
            \ cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\
            \ id est laborum."
          nullable: true
          type: string
        unitPrice:
          example: 125.54
          nullable: true
          type: number
        currencyCode:
          default: EUR
          example: EUR
          nullable: true
          type: string
        itemCount:
          default: 1
          example: 1
          type: integer
        condition:
          default: USED
          enum:
          - NEW
          - USED
          - DAMAGED
          - DETERIORATED
          - UNRECOVERABLE
          example: USED
          type: string
        medias:
          items:
            $ref: '#/components/schemas/Media-dispute.read'
          type: array
      required:
      - medias
      - nature
      - seller
      - ulid
    Organization-Address-Update:
      deprecated: false
      description: ""
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Organization-CollectionRead:
      deprecated: false
      description: ""
      example:
        counterProposalToggle: true
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        personaAuthPortalToggle: true
        automatedReturnToggle: true
        directNotificationToggle: true
        flatRateEnabled: true
        websiteUrl: websiteUrl
        name: name
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        internalMessagingToggle: true
        id: 0
        commercialRegistryNumber: commercialRegistryNumber
        vatNumber: vatNumber
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        vatNumber:
          nullable: true
          type: string
        commercialRegistryNumber:
          type: string
        websiteUrl:
          nullable: true
          type: string
        icon:
          $ref: '#/components/schemas/Organization-Media-CollectionRead'
        logo:
          $ref: '#/components/schemas/Organization-Media-CollectionRead'
        directNotificationToggle:
          default: true
          example: true
          type: boolean
        internalMessagingToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        automatedReturnToggle:
          default: true
          example: true
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - automatedReturnToggle
      - counterProposalToggle
      - directNotificationToggle
      - internalMessagingToggle
      - personaAuthPortalToggle
    Organization-Media-CollectionRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Organization-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    Organization-Read:
      deprecated: false
      description: ""
      example:
        counterProposalToggle: true
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        primaryColor: primaryColor
        personaAuthPortalToggle: true
        automatedReturnToggle: true
        directNotificationToggle: true
        flatRateEnabled: true
        domainVerified: true
        anonymityLevel: PARTIAL_FIRST_NAME
        websiteUrl: websiteUrl
        name: name
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        internalMessagingToggle: true
        commercialRegistryNumber: commercialRegistryNumber
        customBaseUrl: customBaseUrl
        vatNumber: vatNumber
      properties:
        name:
          type: string
        vatNumber:
          nullable: true
          type: string
        commercialRegistryNumber:
          type: string
        websiteUrl:
          nullable: true
          type: string
        customBaseUrl:
          nullable: true
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/Organization-Media-Read'
        logo:
          $ref: '#/components/schemas/Organization-Media-Read'
        primaryColor:
          nullable: true
          type: string
        directNotificationToggle:
          default: true
          example: true
          type: boolean
        anonymityLevel:
          default: PARTIAL_FIRST_NAME
          enum:
          - COMPLETE
          - PARTIAL_FIRST_NAME
          - TRANSPARENT
          example: PARTIAL_FIRST_NAME
          type: string
        internalMessagingToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        automatedReturnToggle:
          default: true
          example: true
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - anonymityLevel
      - automatedReturnToggle
      - counterProposalToggle
      - directNotificationToggle
      - domainVerified
      - internalMessagingToggle
      - personaAuthPortalToggle
    Organization-Update:
      deprecated: false
      description: ""
      properties:
        name:
          maxLength: 64
          type: string
        vatNumber:
          maxLength: 32
          nullable: true
          type: string
        commercialRegistryNumber:
          maxLength: 32
          type: string
        websiteUrl:
          externalDocs:
            url: https://schema.org/url
          format: uri
          maxLength: 64
          nullable: true
          type: string
        customBaseUrl:
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/Organization-Address-Update'
        primaryColor:
          nullable: true
          type: string
        directNotificationToggle:
          default: true
          example: true
          type: boolean
        anonymityLevel:
          default: PARTIAL_FIRST_NAME
          enum:
          - COMPLETE
          - PARTIAL_FIRST_NAME
          - TRANSPARENT
          example: PARTIAL_FIRST_NAME
          type: string
        internalMessagingToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        automatedReturnToggle:
          default: true
          example: true
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - name
    Organization-UserRead:
      deprecated: false
      description: ""
      example:
        flatRateEnabled: true
        domainVerified: true
        counterProposalToggle: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        internalMessagingToggle: true
        id: 6
        personaAuthPortalToggle: true
        automatedReturnToggle: true
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/Media-UserRead'
        logo:
          $ref: '#/components/schemas/Media-UserRead'
        internalMessagingToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        automatedReturnToggle:
          default: true
          example: true
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - automatedReturnToggle
      - counterProposalToggle
      - domainVerified
      - internalMessagingToggle
      - personaAuthPortalToggle
    Organization-dispute.read:
      deprecated: false
      description: ""
      properties:
        name:
          type: string
        websiteUrl:
          nullable: true
          type: string
        customBaseUrl:
          nullable: true
          type: string
        icon:
          $ref: '#/components/schemas/Media-dispute.read'
        logo:
          $ref: '#/components/schemas/Media-dispute.read'
        primaryColor:
          nullable: true
          type: string
        directNotificationToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - counterProposalToggle
      - directNotificationToggle
      - personaAuthPortalToggle
    Parcel:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        carrier:
          enum:
          - SwissPost
          - MondialRelay
          - Colissimo
          - Dhl
          - Chronopost
          - ColisPrive
          - Dpd
          - Ups
          - FedEx
          - RelaisColis
          type: string
        identifier:
          example: 8J001271466474
          maxLength: 128
          minLength: 4
          type: string
        price:
          example: 4.88
          minimum: 0
          nullable: true
          type: number
        refundable:
          type: boolean
        currency:
          default: EUR
          example: EUR
          externalDocs:
            url: https://schema.org/priceCurrency
          nullable: true
          type: string
        status:
          enum:
          - CREATED
          - SHIPPED
          - IN_TRANSIT
          - DELIVERED
          - ERROR
          - ACCEPTED
          - REFUSED
          - null
          nullable: true
          type: string
        dispute:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        transaction:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - carrier
      - identifier
    Parcel-CollectionRead:
      deprecated: false
      description: ""
      type: object
    Parcel-Read:
      deprecated: false
      description: ""
      type: object
    Parcel-Write:
      deprecated: false
      description: ""
      properties:
        carrier:
          enum:
          - SwissPost
          - MondialRelay
          - Colissimo
          - Dhl
          - Chronopost
          - ColisPrive
          - Dpd
          - Ups
          - FedEx
          - RelaisColis
          type: string
        identifier:
          example: 8J001271466474
          type: string
        price:
          example: 4.88
          nullable: true
          type: number
        refundable:
          type: boolean
        currency:
          default: EUR
          example: EUR
          nullable: true
          type: string
      required:
      - refundable
    Parcel-dispute.read:
      deprecated: false
      description: ""
      properties:
        carrier:
          enum:
          - SwissPost
          - MondialRelay
          - Colissimo
          - Dhl
          - Chronopost
          - ColisPrive
          - Dpd
          - Ups
          - FedEx
          - RelaisColis
          type: string
        identifier:
          example: 8J001271466474
          maxLength: 128
          minLength: 4
          type: string
        price:
          example: 4.88
          minimum: 0
          nullable: true
          type: number
        refundable:
          type: boolean
        currency:
          default: EUR
          example: EUR
          externalDocs:
            url: https://schema.org/priceCurrency
          nullable: true
          type: string
        status:
          enum:
          - CREATED
          - SHIPPED
          - IN_TRANSIT
          - DELIVERED
          - ERROR
          - ACCEPTED
          - REFUSED
          - null
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
      required:
      - carrier
      - identifier
    Persona:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        captcha:
          nullable: true
          type: string
        organization:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        targetUrl:
          description: The URL you wish that Persona to go to without additional MFA.
            The URL MUST concern that Persona.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          nullable: true
          type: string
        authUrl:
          description: Url that is able to bypass MFA for a single user. Please note
            that this should not be shared between the complainant and the seller
            or anyone external to them.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
        expireAt:
          description: "This authenticated-URL cannot be renewed, you will have to\
            \ re-create one each time. Typically valid for a single hour."
          format: date-time
          nullable: true
          type: string
        password:
          description: The hashed password
          nullable: true
          type: string
        plainPassword:
          example: secr$t
          nullable: true
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth:
          format: date
          nullable: true
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Address'
        riskLevel:
          description: We sort Persona into three distinct risks' category. This is
            inferred from the riskScore.
          enum:
          - WEAK
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        riskScore:
          description: "That score is regularly updated, each action taken can potentially\
            \ update that value. A value close to zero mean zero risk and close to\
            \ a hundred mean risky."
          example: 24
          maximum: 100
          minimum: 0
          nullable: true
          type: integer
        externalPurchaseCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          type: integer
        externalSellCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Metadata'
          type: array
        offers:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        purchases:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        views:
          items:
            $ref: '#/components/schemas/View'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        offerCount:
          description: Issued Offers count owned by a given Persona
          example: 4
          readOnly: true
          type: integer
        purchaseCount:
          example: 42
          readOnly: true
          type: integer
        roles:
          items:
            type: string
          type: array
        userIdentifier:
          description: Either email or the mobile phone number
          readOnly: true
          type: string
      required:
      - offers
      - purchases
      - views
    Persona-Address-Read:
      deprecated: false
      description: ""
      example:
        zipCode: "75004"
        buildingName: Electron
        createdAt: 2000-01-23T04:56:07.000+00:00
        cityName: Paris
        countryCode: FRA
        companyName: Company Tld
        secondLine: Apt 6E
        firstLine: 118 avenue des champs élysées
        buildingFloor: Third floor
        gateOrPortalOrInboxCode: "3124"
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
    Persona-Address-Update:
      deprecated: false
      description: ""
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Persona-Address-Write:
      deprecated: false
      description: ""
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    Persona-AuthReturn:
      deprecated: false
      description: ""
      example:
        authUrl: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
        expireAt: 2000-01-23T04:56:07.000+00:00
      properties:
        authUrl:
          description: Url that is able to bypass MFA for a single user. Please note
            that this should not be shared between the complainant and the seller
            or anyone external to them.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
          nullable: true
          type: string
        expireAt:
          description: "This authenticated-URL cannot be renewed, you will have to\
            \ re-create one each time. Typically valid for a single hour."
          format: date-time
          nullable: true
          type: string
    Persona-CollectionRead:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        createdAt: 2000-01-23T04:56:07.000+00:00
        riskLevel: WEAK
        offerCount: 4
        purchaseCount: 42
        id: 0
        email: john.doe@gmail.com
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        riskLevel:
          description: We sort Persona into three distinct risks' category. This is
            inferred from the riskScore.
          enum:
          - WEAK
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        offerCount:
          description: Issued Offers count owned by a given Persona
          example: 4
          readOnly: true
          type: integer
        purchaseCount:
          example: 42
          readOnly: true
          type: integer
    Persona-ExternalAuth:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        targetUrl:
          description: The URL you wish that Persona to go to without additional MFA.
            The URL MUST concern that Persona.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          nullable: true
          type: string
        plainPassword:
          example: secr$t
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
    Persona-Metadata-Read:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Persona-Metadata-Update:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Persona-Metadata-Write:
      deprecated: false
      description: ""
      example:
        value: "54412"
        key: External-ID
      properties:
        key:
          example: External-ID
          type: string
        value:
          example: "54412"
          nullable: true
          type: string
    Persona-PostAuthRead:
      deprecated: false
      description: ""
      example:
        authUrl: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
        expireAt: 2000-01-23T04:56:07.000+00:00
      properties:
        authUrl:
          description: Url that is able to bypass MFA for a single user. Please note
            that this should not be shared between the complainant and the seller
            or anyone external to them.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV&t=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o
          nullable: true
          type: string
        expireAt:
          description: "This authenticated-URL cannot be renewed, you will have to\
            \ re-create one each time. Typically valid for a single hour."
          format: date-time
          nullable: true
          type: string
    Persona-Read:
      deprecated: false
      description: ""
      example:
        lastName: Doe
        mobilePhoneNumber: "+33745214529"
        metadata:
        - value: "54412"
          key: External-ID
        - value: "54412"
          key: External-ID
        address:
          zipCode: "75004"
          buildingName: Electron
          createdAt: 2000-01-23T04:56:07.000+00:00
          cityName: Paris
          countryCode: FRA
          companyName: Company Tld
          secondLine: Apt 6E
          firstLine: 118 avenue des champs élysées
          buildingFloor: Third floor
          gateOrPortalOrInboxCode: "3124"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        riskLevel: WEAK
        gender: RATHER_NOT_SAY
        offerCount: 4
        purchaseCount: 42
        externalSellCount: 1
        dateOfBirth: 2000-01-23
        language: fr
        externalPurchaseCount: 6
        firstName: John
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: 0
        riskScore: 24
        email: john.doe@gmail.com
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth:
          format: date
          nullable: true
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Persona-Address-Read'
        riskLevel:
          description: We sort Persona into three distinct risks' category. This is
            inferred from the riskScore.
          enum:
          - WEAK
          - MEDIUM
          - HIGH
          - null
          nullable: true
          type: string
        riskScore:
          description: "That score is regularly updated, each action taken can potentially\
            \ update that value. A value close to zero mean zero risk and close to\
            \ a hundred mean risky."
          example: 24
          maximum: 100
          minimum: 0
          nullable: true
          type: integer
        externalPurchaseCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          type: integer
        externalSellCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Persona-Metadata-Read'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        offerCount:
          description: Issued Offers count owned by a given Persona
          example: 4
          readOnly: true
          type: integer
        purchaseCount:
          example: 42
          readOnly: true
          type: integer
    Persona-Register:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth:
          format: date
          nullable: true
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
      required:
      - firstName
      - gender
      - lastName
    Persona-TokenWrite:
      deprecated: false
      description: ""
      properties:
        targetUrl:
          description: The URL you wish that Persona to go to without additional MFA.
            The URL MUST concern that Persona.
          example: https://next.tripartie.app/?d=01ARZ3NDEKTSV4RRFFQ69G5FAV
          externalDocs:
            url: https://schema.org/url
          format: uri
          nullable: true
          type: string
      required:
      - targetUrl
    Persona-Update:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth:
          format: date
          nullable: true
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Persona-Address-Update'
        externalPurchaseCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          minimum: 0
          type: integer
        externalSellCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          minimum: 0
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Persona-Metadata-Update'
          maxItems: 16
          type: array
      required:
      - firstName
      - gender
      - lastName
    Persona-Write:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: John
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: Doe
          maxLength: 64
          minLength: 1
          type: string
        gender:
          default: RATHER_NOT_SAY
          enum:
          - MALE
          - FEMALE
          - OTHER
          - RATHER_NOT_SAY
          example: RATHER_NOT_SAY
          type: string
        dateOfBirth:
          format: date
          nullable: true
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          externalDocs:
            url: https://schema.org/email
          format: email
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Persona-Address-Write'
        externalPurchaseCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          minimum: 0
          type: integer
        externalSellCount:
          description: "Knowing the statistics on your user is used to better know\
            \ its profile when you do not use the Safe-Checkout feature. Although\
            \ it is not required, we recommend that you keep us informed."
          minimum: 0
          type: integer
        metadata:
          description: You can assign different meta to your Persona object for different
            purposes. eg. Ease searching.
          items:
            $ref: '#/components/schemas/Persona-Metadata-Write'
          maxItems: 16
          type: array
      required:
      - firstName
      - gender
      - lastName
    Persona-dispute.read:
      deprecated: false
      description: ""
      example:
        firstName: John
        lastName: Doe
        mobilePhoneNumber: "+33745214529"
        language: fr
        id: 0
        email: john.doe@gmail.com
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: John
          type: string
        lastName:
          example: Doe
          type: string
        language:
          description: "That data is used for rendering the frontend application with\
            \ given language. If not set, will be inferred. Custom codes can be issued\
            \ for specific requirements."
          example: fr
          nullable: true
          type: string
        email:
          example: john.doe@gmail.com
          nullable: true
          type: string
        mobilePhoneNumber:
          example: "+33745214529"
          nullable: true
          type: string
    Transaction-dispute.read:
      deprecated: false
      description: ""
      properties:
        ulid:
          type: string
        offer:
          $ref: '#/components/schemas/Offer-dispute.read'
        buyer:
          $ref: '#/components/schemas/Persona-dispute.read'
        fees:
          nullable: true
          type: number
        refundableFees:
          type: boolean
        metadata:
          items:
            $ref: '#/components/schemas/Metadata-dispute.read'
          type: array
        parcels:
          items:
            $ref: '#/components/schemas/Parcel-dispute.read'
          type: array
      required:
      - buyer
      - offer
      - ulid
    User:
      deprecated: false
      description: ""
      example:
        birthday: 2000-01-23T04:56:07.000+00:00
        lastName: TAHRI
        preferredLanguage: fr
        consentMailNotification: true
        keys:
        - https://example.com/
        - https://example.com/
        invitedRole: ROLE_ADMIN
        roles:
        - ROLE_ORGANIZATION_OWNER
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        emailVerificationInput: emailVerificationInput
        createdAt: 2000-01-23T04:56:07.000+00:00
        impersonatingOrganization: true
        password: password
        plainPassword: secr$t
        totpSecret: totpSecret
        captcha: captcha
        publicName: Nickname
        userIdentifier: userIdentifier
        totpChallenge: totpChallenge
        lockdown: true
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        email: john.doe@company.tld
        views:
        - offer: https://example.com/
          dispute: https://example.com/
          createdAt: 2000-01-23T04:56:07.000+00:00
          persona: https://example.com/
          hitCount: 1
          namedSource: BUYER
          ipAddress: ipAddress
          id: 6
          user: https://example.com/
        - offer: https://example.com/
          dispute: https://example.com/
          createdAt: 2000-01-23T04:56:07.000+00:00
          persona: https://example.com/
          hitCount: 1
          namedSource: BUYER
          ipAddress: ipAddress
          id: 6
          user: https://example.com/
        updatedAt: 2000-01-23T04:56:07.000+00:00
        iri: https://example.com/
        salt: salt
        totpUri: totpUri
        secondAuthFactor: true
        newPassword: new-secr$t
        avatar: https://example.com/
        consentMailAds: true
        firstName: Jacob
        medias:
        - https://example.com/
        - https://example.com/
        phoneVerificationInput: phoneVerificationInput
        organization: https://example.com/
        originCountry: FRA
        impersonatedOrganization: https://example.com/
        roleInCompany: Accounting Dpt
        phoneVerificationCode: phoneVerificationCode
        notifications:
        - https://example.com/
        - https://example.com/
        emailVerificationCode: emailVerificationCode
        username: username
      properties:
        id:
          readOnly: true
          type: integer
        captcha:
          nullable: true
          type: string
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          type: string
        invitedRole:
          example: ROLE_ADMIN
          items:
            enum:
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_ADMIN
            - ROLE_PLATFORM_SUPPORT
            - ROLE_ORGANIZATION_OWNER
            type: string
          type: array
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        password:
          description: The hashed password
          nullable: true
          type: string
        plainPassword:
          example: secr$t
          nullable: true
          type: string
        newPassword:
          example: new-secr$t
          nullable: true
          type: string
        totpSecret:
          nullable: true
          type: string
        totpUri:
          nullable: true
          type: string
        totpEnabled:
          type: boolean
        totpChallenge:
          nullable: true
          type: string
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The originating country
          example: FRA
          maxLength: 3
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          maxLength: 2
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        emailVerificationCode:
          nullable: true
          type: string
        emailVerificationInput:
          nullable: true
          type: string
        phoneVerificationCode:
          nullable: true
          type: string
        phoneVerificationInput:
          nullable: true
          type: string
        avatar:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        notifications:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        medias:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        views:
          items:
            $ref: '#/components/schemas/View'
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
        lockdown:
          type: boolean
        keys:
          items:
            example: https://example.com/
            format: iri-reference
            type: string
          type: array
        organization:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        impersonatedOrganization:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        username:
          description: A visual identifier that represents this user.
          readOnly: true
          type: string
        salt:
          nullable: true
          readOnly: true
          type: string
        userIdentifier:
          readOnly: true
          type: string
        impersonatingOrganization:
          readOnly: true
          type: boolean
        secondAuthFactor:
          readOnly: true
          type: boolean
      required:
      - consentMailAds
      - consentMailNotification
      - keys
      - lockdown
      - roles
      - views
    User-Address-Write:
      deprecated: false
      description: ""
      properties:
        companyName:
          example: Company Tld
          nullable: true
          type: string
        countryCode:
          example: FRA
          maxLength: 3
          type: string
        zipCode:
          example: "75004"
          type: string
        cityName:
          example: Paris
          type: string
        firstLine:
          example: 118 avenue des champs élysées
          type: string
        secondLine:
          example: Apt 6E
          nullable: true
          type: string
        buildingName:
          example: Electron
          nullable: true
          type: string
        buildingFloor:
          example: Third floor
          nullable: true
          type: string
        gateOrPortalOrInboxCode:
          example: "3124"
          nullable: true
          type: string
    User-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        birthday: 2000-01-23T04:56:07.000+00:00
        lastName: TAHRI
        iri: https://example.com/
        preferredLanguage: fr
        consentMailNotification: true
        secondAuthFactor: true
        roles:
        - ROLE_ORGANIZATION_OWNER
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        consentMailAds: true
        firstName: Jacob
        createdAt: 2000-01-23T04:56:07.000+00:00
        impersonatingOrganization: true
        publicName: Nickname
        organization:
          flatRateEnabled: true
          domainVerified: true
          counterProposalToggle: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          internalMessagingToggle: true
          id: 6
          personaAuthPortalToggle: true
          automatedReturnToggle: true
        originCountry: FRA
        lockdown: true
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        roleInCompany: Accounting Dpt
        email: john.doe@company.tld
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The originating country
          example: FRA
          maxLength: 3
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          maxLength: 2
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/User-Media-AuthenticatedRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
        lockdown:
          type: boolean
        organization:
          $ref: '#/components/schemas/User-Organization-AuthenticatedRead'
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        impersonatingOrganization:
          readOnly: true
          type: boolean
        secondAuthFactor:
          readOnly: true
          type: boolean
      required:
      - consentMailAds
      - consentMailNotification
      - lockdown
      - roles
    User-CollectionRead:
      deprecated: false
      description: ""
      example:
        lastName: TAHRI
        iri: https://example.com/
        secondAuthFactor: true
        roles:
        - ROLE_ORGANIZATION_OWNER
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        firstName: Jacob
        createdAt: 2000-01-23T04:56:07.000+00:00
        publicName: Nickname
        organization:
          name: name
          id: 6
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        roleInCompany: Accounting Dpt
        email: john.doe@company.tld
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/User-Media-CollectionRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        organization:
          $ref: '#/components/schemas/User-Organization-CollectionRead'
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        secondAuthFactor:
          readOnly: true
          type: boolean
      required:
      - roles
    User-EmailValidationWrite:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
          nullable: true
        emailVerificationInput:
          maxLength: 128
          minLength: 128
          nullable: true
          type: string
      required:
      - captcha
      - emailVerificationInput
    User-Invite:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: Jacob
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: TAHRI
          maxLength: 64
          minLength: 1
          type: string
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        invitedRole:
          example: ROLE_ADMIN
          items:
            enum:
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_ADMIN
            - ROLE_PLATFORM_SUPPORT
            - ROLE_ORGANIZATION_OWNER
            type: string
          type: array
      required:
      - email
      - firstName
      - invitedRole
      - lastName
    User-Media-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Media-CollectionRead:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Media-Read:
      deprecated: false
      description: ""
      example:
        publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
      properties:
        publicUrl:
          example: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          externalDocs:
            url: https://schema.org/url
          format: uri
          type: string
      required:
      - publicUrl
    User-Organization-AuthenticatedRead:
      deprecated: false
      description: ""
      example:
        flatRateEnabled: true
        domainVerified: true
        counterProposalToggle: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        internalMessagingToggle: true
        id: 6
        personaAuthPortalToggle: true
        automatedReturnToggle: true
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/User-Media-AuthenticatedRead'
        logo:
          $ref: '#/components/schemas/User-Media-AuthenticatedRead'
        internalMessagingToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        automatedReturnToggle:
          default: true
          example: true
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - automatedReturnToggle
      - counterProposalToggle
      - domainVerified
      - internalMessagingToggle
      - personaAuthPortalToggle
    User-Organization-CollectionRead:
      deprecated: false
      description: ""
      example:
        name: name
        id: 6
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
    User-Organization-Read:
      deprecated: false
      description: ""
      example:
        flatRateEnabled: true
        domainVerified: true
        counterProposalToggle: true
        name: name
        icon:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        logo:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        internalMessagingToggle: true
        id: 0
        personaAuthPortalToggle: true
        automatedReturnToggle: true
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 64
          type: string
        domainVerified:
          type: boolean
        icon:
          $ref: '#/components/schemas/User-Media-Read'
        logo:
          $ref: '#/components/schemas/User-Media-Read'
        internalMessagingToggle:
          default: true
          example: true
          type: boolean
        personaAuthPortalToggle:
          type: boolean
        automatedReturnToggle:
          default: true
          example: true
          type: boolean
        counterProposalToggle:
          default: true
          example: true
          type: boolean
        flatRateEnabled:
          readOnly: true
          type: boolean
      required:
      - name
    User-Organization-Write:
      deprecated: false
      description: ""
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 64
          type: string
        vatNumber:
          maxLength: 32
          nullable: true
          type: string
        commercialRegistryNumber:
          maxLength: 32
          type: string
        websiteUrl:
          externalDocs:
            url: https://schema.org/url
          format: uri
          maxLength: 64
          nullable: true
          type: string
        billingAddress:
          $ref: '#/components/schemas/User-Address-Write'
      required:
      - name
    User-PostRegisterRead:
      deprecated: false
      description: ""
      example:
        iri: https://example.com/
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
    User-TotpSetupRead:
      deprecated: false
      description: ""
      example:
        totpUri: totpUri
      properties:
        totpUri:
          nullable: true
          type: string
    User-TotpSetupWrite:
      deprecated: false
      description: ""
      type: object
    User-TotpToggleRead:
      deprecated: false
      description: ""
      type: object
    User-TotpToggleWrite:
      deprecated: false
      description: ""
      properties:
        totpEnabled:
          type: boolean
        totpChallenge:
          nullable: true
          type: string
      required:
      - totpChallenge
      - totpEnabled
    User-Update:
      deprecated: false
      description: ""
      properties:
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
      required:
      - consentMailAds
      - consentMailNotification
    User-UserEmailUpdate:
      deprecated: false
      description: ""
      properties:
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
      required:
      - email
      - plainPassword
    User-UserEnableWrite:
      deprecated: false
      description: Enable a previously deactivated user account
      type: object
    User-UserPasswordUpdate:
      deprecated: false
      description: ""
      properties:
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
        newPassword:
          example: new-secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
      required:
      - newPassword
      - plainPassword
    User-UserRead:
      deprecated: false
      description: ""
      example:
        birthday: 2000-01-23T04:56:07.000+00:00
        lastName: TAHRI
        iri: https://example.com/
        preferredLanguage: fr
        consentMailNotification: true
        secondAuthFactor: true
        roles:
        - ROLE_ORGANIZATION_OWNER
        avatar:
          publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
        totpEnabled: true
        intlPhoneNumber: "+33700000000"
        consentMailAds: true
        firstName: Jacob
        createdAt: 2000-01-23T04:56:07.000+00:00
        impersonatingOrganization: true
        publicName: Nickname
        organization:
          flatRateEnabled: true
          domainVerified: true
          counterProposalToggle: true
          name: name
          icon:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          logo:
            publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
          internalMessagingToggle: true
          id: 6
          personaAuthPortalToggle: true
          automatedReturnToggle: true
        originCountry: FRA
        lockdown: true
        lastSuccessfulLogIn: 2000-01-23T04:56:07.000+00:00
        id: 0
        roleInCompany: Accounting Dpt
        email: john.doe@company.tld
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        firstName:
          example: Jacob
          type: string
        lastName:
          example: TAHRI
          type: string
        publicName:
          example: Nickname
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        roles:
          example:
          - ROLE_ORGANIZATION_OWNER
          items:
            enum:
            - ROLE_ORGANIZATION_OWNER
            - ROLE_ADMIN
            - ROLE_CONSULTANT
            - ROLE_ACCOUNTING_MANAGER
            - ROLE_BILLING_MANAGER
            - ROLE_CUSTOMER_SERVICE
            - ROLE_PLATFORM_SUPPORT
            - ROLE_PLATFORM_ADMIN
            - ROLE_USER
            type: string
          type: array
        totpEnabled:
          type: boolean
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The originating country
          example: FRA
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          nullable: true
          type: string
        lastSuccessfulLogIn:
          format: date-time
          nullable: true
          type: string
        avatar:
          $ref: '#/components/schemas/Media-UserRead'
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
        lockdown:
          type: boolean
        organization:
          $ref: '#/components/schemas/Organization-UserRead'
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
        impersonatingOrganization:
          readOnly: true
          type: boolean
        secondAuthFactor:
          readOnly: true
          type: boolean
      required:
      - email
    User-Write:
      deprecated: false
      description: ""
      properties:
        captcha:
          nullable: true
          type: string
        firstName:
          example: Jacob
          maxLength: 64
          minLength: 1
          type: string
        lastName:
          example: TAHRI
          maxLength: 64
          minLength: 1
          type: string
        publicName:
          example: Nickname
          maxLength: 32
          minLength: 2
          nullable: true
          type: string
        roleInCompany:
          example: Accounting Dpt
          maxLength: 32
          minLength: 2
          nullable: true
          type: string
        birthday:
          format: date-time
          nullable: true
          type: string
        email:
          example: john.doe@company.tld
          externalDocs:
            url: https://schema.org/email
          format: email
          maxLength: 180
          type: string
        plainPassword:
          example: secr$t
          maxLength: 64
          minLength: 6
          nullable: true
          type: string
        intlPhoneNumber:
          example: "+33700000000"
          nullable: true
          type: string
        originCountry:
          description: The originating country
          example: FRA
          nullable: true
          type: string
        preferredLanguage:
          example: fr
          nullable: true
          type: string
        consentMailNotification:
          type: boolean
        consentMailAds:
          type: boolean
        organization:
          $ref: '#/components/schemas/User-Organization-Write'
      required:
      - captcha
      - email
      - firstName
      - lastName
      - originCountry
      - plainPassword
      - preferredLanguage
    User-user.subscribed:
      deprecated: false
      description: Disable a user account
      example:
        iri: https://example.com/
        id: 0
      properties:
        id:
          readOnly: true
          type: integer
        iri:
          example: https://example.com/
          format: iri-reference
          readOnly: true
          type: string
    View:
      deprecated: false
      description: ""
      example:
        offer: https://example.com/
        dispute: https://example.com/
        createdAt: 2000-01-23T04:56:07.000+00:00
        persona: https://example.com/
        hitCount: 1
        namedSource: BUYER
        ipAddress: ipAddress
        id: 6
        user: https://example.com/
      properties:
        id:
          readOnly: true
          type: integer
        ipAddress:
          type: string
        offer:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        dispute:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        persona:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        user:
          example: https://example.com/
          format: iri-reference
          nullable: true
          type: string
        hitCount:
          default: 1
          example: 1
          type: integer
        createdAt:
          format: date-time
          readOnly: true
          type: string
        namedSource:
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          - OTHER
          readOnly: true
          type: string
          nullable: true
      required:
      - hitCount
      - ipAddress
    View-dispute.read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        hitCount: 1
        namedSource: BUYER
      properties:
        hitCount:
          default: 1
          example: 1
          type: integer
        createdAt:
          format: date-time
          readOnly: true
          type: string
        namedSource:
          enum:
          - BUYER
          - PLATFORM
          - SELLER
          - OTHER
          readOnly: true
          type: string
          nullable: true
      required:
      - hitCount
    WebhookHistory:
      deprecated: false
      description: ""
      type: object
    WebhookHistory-CollectionRead:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        occurredAt: 2000-01-23T04:56:07.000+00:00
        inProgress: true
        retryCount: 1
        id: 0
        event: dispute.opened
        objectId: objectId
        responseCode: 6
        attemptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        objectId:
          nullable: true
          type: string
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          type: string
        responseCode:
          nullable: true
          type: integer
        occurredAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        attemptedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        retryCount:
          type: integer
        inProgress:
          readOnly: true
          type: boolean
      required:
      - event
      - occurredAt
      - retryCount
    WebhookHistory-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        occurredAt: 2000-01-23T04:56:07.000+00:00
        responseBody: responseBody
        inProgress: true
        normalizedObject:
        - normalizedObject
        - normalizedObject
        retryCount: 1
        id: 0
        event: dispute.opened
        objectId: objectId
        url: url
        responseCode: 6
        attemptedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          readOnly: true
          type: integer
        objectId:
          nullable: true
          type: string
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          type: string
        url:
          type: string
        normalizedObject:
          items:
            type: string
          type: array
        responseCode:
          nullable: true
          type: integer
        responseBody:
          nullable: true
          type: string
        occurredAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        attemptedAt:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        retryCount:
          type: integer
        inProgress:
          readOnly: true
          type: boolean
      required:
      - event
      - occurredAt
      - retryCount
      - url
    WebhookSubscription-Read:
      deprecated: false
      description: ""
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        callbackUrl: https://company.tld/webhook/tripartie
        id: 0
        event: dispute.opened
        webhookSecret: webhookSecret
      properties:
        id:
          readOnly: true
          type: integer
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          - null
          nullable: true
          type: string
        callbackUrl:
          example: https://company.tld/webhook/tripartie
          type: string
        webhookSecret:
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - webhookSecret
    WebhookSubscription-Write:
      deprecated: false
      description: ""
      properties:
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          - null
          nullable: true
          type: string
        callbackUrl:
          example: https://company.tld/webhook/tripartie
          externalDocs:
            url: https://schema.org/url
          format: uri
          maxLength: 5000
          minLength: 4
          type: string
      required:
      - callbackUrl
    WorkflowEvent-dispute.read:
      deprecated: false
      description: ""
      example:
        occurredAt: 2000-01-23T04:56:07.000+00:00
        initiator: https://example.com/
        from: from
        label: label
        to: to
        event: dispute.opened
      properties:
        label:
          type: string
        from:
          nullable: true
          type: string
        to:
          nullable: true
          type: string
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          - null
          nullable: true
          type: string
        occurredAt:
          format: date-time
          readOnly: true
          type: string
        initiator:
          example: https://example.com/
          format: iri-reference
          nullable: true
          readOnly: true
          type: string
      required:
      - label
    Webhook:
      example:
        iri: iri
        occurredAt: 2000-01-23T04:56:07.000+00:00
        id: 122541
        event: dispute.created
        objectId: 01ARZ3NDEKTSV4RRFFQ69G5FAV
        object:
          counterSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
          metadata:
          - value: "54412"
            key: External-ID
          - value: "54412"
            key: External-ID
          redirectUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold?from_dispute=true
          messageCount: 6
          ulid: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          platformApproval: true
          platformReasoning: The buyer does not respect our terms of service.
          issueMentionedInOffer: true
          sellerApproval: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          platformSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
          complainantStake: LOW
          inferredStake: LOW
          viewCount: 5
          views:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            hitCount: 1
            namedSource: BUYER
          - createdAt: 2000-01-23T04:56:07.000+00:00
            hitCount: 1
            namedSource: BUYER
          events:
          - occurredAt: 2000-01-23T04:56:07.000+00:00
            initiator: https://example.com/
            from: from
            label: label
            to: to
            event: dispute.opened
          - occurredAt: 2000-01-23T04:56:07.000+00:00
            initiator: https://example.com/
            from: from
            label: label
            to: to
            event: dispute.opened
          updatedAt: 2000-01-23T04:56:07.000+00:00
          chosenSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
          iri: https://example.com/
          closedInFavorOf: BUYER
          counterPartialRefundAmount: 30
          sellerTruthfulnessScore: 100
          recommendedSolution: PARTIAL_REFUND_WITH_PARTIAL_RETURN
          platformPartialRefundAmount: 1
          platformActorType: RULING
          arbitrationBy: https://example.com/
          awaitedParty: BUYER
          issueDetails: "The item received have multiple impacts on the left side,\
            \ this was not mentioned and I feel a bit sad. Although it is usable as-is,\
            \ I expected it without flaws."
          chosenPartialRefundAmount: 40
          statusExpiration: 2000-01-23T04:56:07.000+00:00
          itemCount: 1
          complainantApproval: true
          maxRefundableForBuyer: 2.3021358869347655
          issueType: NOT_AS_DESCRIBED
          sellerNotes: "Unfortunately, I did not notice it, after thinking again,\
            \ yes, you deserve a discount on that."
          recommendedPartialRefundAmount: 35
          disbursedByBuyer: 5.637376656633329
          sellerRejectionReason: UNJUSTIFIED_REQUEST
          issueInDescriptionType: WRONG_COLOUR
          transaction:
            offer:
              seller:
                firstName: John
                lastName: Doe
                mobilePhoneNumber: "+33745214529"
                language: fr
                id: 0
                email: john.doe@gmail.com
              unitPrice: 125.54
              medias:
              - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              - publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
              condition: USED
              ulid: ulid
              nature: physical_item
              organization:
                directNotificationToggle: true
                flatRateEnabled: true
                websiteUrl: websiteUrl
                counterProposalToggle: true
                name: name
                icon:
                  publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
                primaryColor: primaryColor
                logo:
                  publicUrl: https://cdn.tripartie.app/b15e64db-fbd2-442b-afee-69ee45e2959b.jpg
                customBaseUrl: customBaseUrl
                personaAuthPortalToggle: true
              publicUrl: https://marketplace.tld/offers/that-special-item-i-wish-to-sold
              description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit,\
                \ sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\
                \ Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\
                \ nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\
                \ reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\
                \ pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\
                \ culpa qui officia deserunt mollit anim id est laborum."
              title: ASUS TUF X570-PLUS GAMING Motherboard
              currencyCode: EUR
              itemCount: 1
            fees: 6.027456183070403
            refundableFees: true
            metadata:
            - value: "54412"
              key: External-ID
            - value: "54412"
              key: External-ID
            ulid: ulid
            buyer:
              firstName: John
              lastName: Doe
              mobilePhoneNumber: "+33745214529"
              language: fr
              id: 0
              email: john.doe@gmail.com
            parcels:
            - identifier: 8J001271466474
              createdAt: 2000-01-23T04:56:07.000+00:00
              carrier: SwissPost
              price: 4.88
              refundable: true
              currency: EUR
              status: CREATED
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - identifier: 8J001271466474
              createdAt: 2000-01-23T04:56:07.000+00:00
              carrier: SwissPost
              price: 4.88
              refundable: true
              currency: EUR
              status: CREATED
              updatedAt: 2000-01-23T04:56:07.000+00:00
          status: CREATED
          complainantTruthfulnessScore: 100
          parcels:
          - identifier: 8J001271466474
            createdAt: 2000-01-23T04:56:07.000+00:00
            carrier: SwissPost
            price: 4.88
            refundable: true
            currency: EUR
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - identifier: 8J001271466474
            createdAt: 2000-01-23T04:56:07.000+00:00
            carrier: SwissPost
            price: 4.88
            refundable: true
            currency: EUR
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          example: 122541
          type: integer
        event:
          enum:
          - dispute.opened
          - dispute.submitted
          - dispute.created
          - dispute.abandoned
          - dispute.settlement
          - dispute.closed
          - dispute.expired
          - dispute.manual_arbitration_required
          - dispute.updated
          - dispute.reminder
          - offer.created
          - offer.expired
          - offer.updated
          - offer.crawl_failure
          - offer.transaction.authorized
          - offer.transaction.reconciled
          - offer.transaction.abandoned
          - offer.closed
          - offer.transaction.refund
          - persona.added
          example: dispute.created
          type: string
        objectId:
          example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
          type: string
        iri:
          format: iri
          type: string
        occurredAt:
          format: date-time
          type: string
        object:
          $ref: '#/components/schemas/Webhook_object'
    AuthError:
      example:
        code: 401
        message: JWT Token not found
      properties:
        code:
          example: 401
          type: integer
        message:
          example: JWT Token not found
          type: string
    MessageError:
      example:
        message: email or password mismatch
      properties:
        message:
          example: email or password mismatch
          type: string
    NotFoundError:
      description: This error can occurs when you reference objects in the query that
        does not exist.
      example:
        detail: Not Found
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: Not Found
          type: string
    GenericError:
      example:
        detail: An internal error occurred that prevented us to fulfill the request
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: An internal error occurred that prevented us to fulfill the request
          type: string
    AccessError:
      example:
        detail: Access denied
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: Access denied
          type: string
    InvalidQueryError:
      example:
        detail: The request is malformed and therefore cannot be executed
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: The request is malformed and therefore cannot be executed
          type: string
    RateLimitError:
      example:
        detail: Too many request
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: Too many request
          type: string
    UnprocessableEntity:
      example:
        violations:
        - code: c1051bb4-d103-4f74-8988-acbcafc7fdc3
          propertyPath: firstName
          message: This value should not be blank.
        - code: c1051bb4-d103-4f74-8988-acbcafc7fdc3
          propertyPath: firstName
          message: This value should not be blank.
        detail: |-
          firstName: This value should not be blank.
          lastName: This value should not be blank.
          email: This value should not be null.
          plainPassword: This value should not be null.
          originCountry: This value should not be null.
          preferredLanguage: This value should not be null.
        type: https://tools.ietf.org/html/rfc2616#section-10
        title: An error occurred
      properties:
        type:
          example: https://tools.ietf.org/html/rfc2616#section-10
          type: string
        title:
          example: An error occurred
          type: string
        detail:
          example: |-
            firstName: This value should not be blank.
            lastName: This value should not be blank.
            email: This value should not be null.
            plainPassword: This value should not be null.
            originCountry: This value should not be null.
            preferredLanguage: This value should not be null.
          type: string
        violations:
          items:
            $ref: '#/components/schemas/UnprocessableEntity_violations_inner'
          type: array
    UserJwtCreated:
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      properties:
        token:
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
          type: string
          nullable: false
    UserJwtWrite:
      example:
        password: p@ssw0rd
        captcha: 23aa3ff98df2457d958a6f9e5c48cfa5
        totpInput: "412541"
        email: john.doe@company.tld
      properties:
        captcha:
          example: 23aa3ff98df2457d958a6f9e5c48cfa5
          type: string
          nullable: false
        email:
          example: john.doe@company.tld
          type: string
          nullable: false
        password:
          example: p@ssw0rd
          type: string
          nullable: false
        totpInput:
          example: "412541"
          type: string
          nullable: true
    api_disputes_ulidevidences_idmedia_post_request:
      properties:
        file:
          format: binary
          type: string
    Webhook_object:
      anyOf:
      - $ref: '#/components/schemas/Dispute-Read'
      - $ref: '#/components/schemas/Persona-Read'
      nullable: false
    UnprocessableEntity_violations_inner:
      example:
        code: c1051bb4-d103-4f74-8988-acbcafc7fdc3
        propertyPath: firstName
        message: This value should not be blank.
      properties:
        propertyPath:
          example: firstName
          type: string
        message:
          example: This value should not be blank.
          type: string
        code:
          example: c1051bb4-d103-4f74-8988-acbcafc7fdc3
          format: identifier
          type: string
  securitySchemes:
    oauth:
      description: OAuth 2.0 application Grant
      flows:
        clientCredentials:
          scopes:
            OFFER_READ: Read-only operations on safe-checkout offers
            OFFER_WRITE: Write permissions on safe-checkout offers
            DISPUTE_READ: Read-only operations on disputes
            DISPUTE_WRITE: Write permissions on disputes
            DISPUTE_ARBITRATION: Update permission on disputes for manual arbitration
              only
            ORGANIZATION_READ: Read organization details and stats
            RULING_READ: Read custom rules applied to the dispute resolution program
            RULING_WRITE: Write custom rules applied to the dispute resolution program
            PERSONA_READ: Read operations on the shared user-base knowledge
            PERSONA_WRITE: Write permissions on the shared user-base knowledge
            PERSONA_AUTH: Capability to issue short-term lived authenticated URL
            INTERNAL_WRITE: Special internal scope
          tokenUrl: /token
      type: oauth2
    jwtPersonalKey:
      description: Value for the Authorization header parameter.
      in: header
      name: Authorization
      type: apiKey
    personaAuthKey:
      description: Value for the X-Persona-Authorization header parameter.
      in: header
      name: X-Persona-Authorization
      type: apiKey

