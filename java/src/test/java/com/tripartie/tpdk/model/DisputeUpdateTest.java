/*
 * Tripartie
 * Our API suite for the **Resolution Center** and the **Safe Checkout** features. Simple, yet elegant web interfaces for your convenience. One request away from your first automated resolution or safe-checkout.
 *
 * The version of the OpenAPI document: 2.0.179
 * Contact: noc@tripartie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tripartie.tpdk.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DisputeUpdate
 */
public class DisputeUpdateTest {
    private final DisputeUpdate model = new DisputeUpdate();

    /**
     * Model tests for DisputeUpdate
     */
    @Test
    public void testDisputeUpdate() {
        // TODO: test DisputeUpdate
    }

    /**
     * Test the property 'itemCount'
     */
    @Test
    public void itemCountTest() {
        // TODO: test itemCount
    }

    /**
     * Test the property 'issueType'
     */
    @Test
    public void issueTypeTest() {
        // TODO: test issueType
    }

    /**
     * Test the property 'issueInDescriptionType'
     */
    @Test
    public void issueInDescriptionTypeTest() {
        // TODO: test issueInDescriptionType
    }

    /**
     * Test the property 'issueMentionedInOffer'
     */
    @Test
    public void issueMentionedInOfferTest() {
        // TODO: test issueMentionedInOffer
    }

    /**
     * Test the property 'issueDetails'
     */
    @Test
    public void issueDetailsTest() {
        // TODO: test issueDetails
    }

    /**
     * Test the property 'complainantStake'
     */
    @Test
    public void complainantStakeTest() {
        // TODO: test complainantStake
    }

    /**
     * Test the property 'chosenSolution'
     */
    @Test
    public void chosenSolutionTest() {
        // TODO: test chosenSolution
    }

    /**
     * Test the property 'chosenPartialRefundAmount'
     */
    @Test
    public void chosenPartialRefundAmountTest() {
        // TODO: test chosenPartialRefundAmount
    }

    /**
     * Test the property 'counterSolution'
     */
    @Test
    public void counterSolutionTest() {
        // TODO: test counterSolution
    }

    /**
     * Test the property 'counterPartialRefundAmount'
     */
    @Test
    public void counterPartialRefundAmountTest() {
        // TODO: test counterPartialRefundAmount
    }

    /**
     * Test the property 'sellerNotes'
     */
    @Test
    public void sellerNotesTest() {
        // TODO: test sellerNotes
    }

    /**
     * Test the property 'sellerRejectionReason'
     */
    @Test
    public void sellerRejectionReasonTest() {
        // TODO: test sellerRejectionReason
    }

    /**
     * Test the property 'complainantApproval'
     */
    @Test
    public void complainantApprovalTest() {
        // TODO: test complainantApproval
    }

    /**
     * Test the property 'sellerApproval'
     */
    @Test
    public void sellerApprovalTest() {
        // TODO: test sellerApproval
    }

    /**
     * Test the property 'platformSolution'
     */
    @Test
    public void platformSolutionTest() {
        // TODO: test platformSolution
    }

    /**
     * Test the property 'platformPartialRefundAmount'
     */
    @Test
    public void platformPartialRefundAmountTest() {
        // TODO: test platformPartialRefundAmount
    }

    /**
     * Test the property 'platformApproval'
     */
    @Test
    public void platformApprovalTest() {
        // TODO: test platformApproval
    }

    /**
     * Test the property 'platformReasoning'
     */
    @Test
    public void platformReasoningTest() {
        // TODO: test platformReasoning
    }

}
