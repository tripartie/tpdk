/*
 * Tripartie
 * Our API suite for the **Resolution Center** and the **Safe Checkout** features. Simple, yet elegant web interfaces for your convenience. One request away from your first automated resolution or safe-checkout.
 *
 * The version of the OpenAPI document: 2.0.194
 * Contact: noc@tripartie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tripartie.tpdk.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.tripartie.tpdk.model.MetadataDisputeRead;
import com.tripartie.tpdk.model.ParcelDisputeRead;
import com.tripartie.tpdk.model.TransactionDisputeRead;
import com.tripartie.tpdk.model.ViewDisputeRead;
import com.tripartie.tpdk.model.WorkflowEventDisputeRead;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DisputeDisputeRead
 */
public class DisputeDisputeReadTest {
    private final DisputeDisputeRead model = new DisputeDisputeRead();

    /**
     * Model tests for DisputeDisputeRead
     */
    @Test
    public void testDisputeDisputeRead() {
        // TODO: test DisputeDisputeRead
    }

    /**
     * Test the property 'ulid'
     */
    @Test
    public void ulidTest() {
        // TODO: test ulid
    }

    /**
     * Test the property 'transaction'
     */
    @Test
    public void transactionTest() {
        // TODO: test transaction
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'redirectUrl'
     */
    @Test
    public void redirectUrlTest() {
        // TODO: test redirectUrl
    }

    /**
     * Test the property 'itemCount'
     */
    @Test
    public void itemCountTest() {
        // TODO: test itemCount
    }

    /**
     * Test the property 'issueType'
     */
    @Test
    public void issueTypeTest() {
        // TODO: test issueType
    }

    /**
     * Test the property 'issueInDescriptionType'
     */
    @Test
    public void issueInDescriptionTypeTest() {
        // TODO: test issueInDescriptionType
    }

    /**
     * Test the property 'issueMentionedInOffer'
     */
    @Test
    public void issueMentionedInOfferTest() {
        // TODO: test issueMentionedInOffer
    }

    /**
     * Test the property 'issueDetails'
     */
    @Test
    public void issueDetailsTest() {
        // TODO: test issueDetails
    }

    /**
     * Test the property 'complainantTruthfulnessScore'
     */
    @Test
    public void complainantTruthfulnessScoreTest() {
        // TODO: test complainantTruthfulnessScore
    }

    /**
     * Test the property 'sellerTruthfulnessScore'
     */
    @Test
    public void sellerTruthfulnessScoreTest() {
        // TODO: test sellerTruthfulnessScore
    }

    /**
     * Test the property 'complainantStake'
     */
    @Test
    public void complainantStakeTest() {
        // TODO: test complainantStake
    }

    /**
     * Test the property 'inferredStake'
     */
    @Test
    public void inferredStakeTest() {
        // TODO: test inferredStake
    }

    /**
     * Test the property 'recommendedSolution'
     */
    @Test
    public void recommendedSolutionTest() {
        // TODO: test recommendedSolution
    }

    /**
     * Test the property 'recommendedPartialRefundAmount'
     */
    @Test
    public void recommendedPartialRefundAmountTest() {
        // TODO: test recommendedPartialRefundAmount
    }

    /**
     * Test the property 'chosenSolution'
     */
    @Test
    public void chosenSolutionTest() {
        // TODO: test chosenSolution
    }

    /**
     * Test the property 'chosenPartialRefundAmount'
     */
    @Test
    public void chosenPartialRefundAmountTest() {
        // TODO: test chosenPartialRefundAmount
    }

    /**
     * Test the property 'counterSolution'
     */
    @Test
    public void counterSolutionTest() {
        // TODO: test counterSolution
    }

    /**
     * Test the property 'counterPartialRefundAmount'
     */
    @Test
    public void counterPartialRefundAmountTest() {
        // TODO: test counterPartialRefundAmount
    }

    /**
     * Test the property 'sellerNotes'
     */
    @Test
    public void sellerNotesTest() {
        // TODO: test sellerNotes
    }

    /**
     * Test the property 'sellerRejectionReason'
     */
    @Test
    public void sellerRejectionReasonTest() {
        // TODO: test sellerRejectionReason
    }

    /**
     * Test the property 'complainantApproval'
     */
    @Test
    public void complainantApprovalTest() {
        // TODO: test complainantApproval
    }

    /**
     * Test the property 'sellerApproval'
     */
    @Test
    public void sellerApprovalTest() {
        // TODO: test sellerApproval
    }

    /**
     * Test the property 'platformSolution'
     */
    @Test
    public void platformSolutionTest() {
        // TODO: test platformSolution
    }

    /**
     * Test the property 'platformPartialRefundAmount'
     */
    @Test
    public void platformPartialRefundAmountTest() {
        // TODO: test platformPartialRefundAmount
    }

    /**
     * Test the property 'platformApproval'
     */
    @Test
    public void platformApprovalTest() {
        // TODO: test platformApproval
    }

    /**
     * Test the property 'platformActorType'
     */
    @Test
    public void platformActorTypeTest() {
        // TODO: test platformActorType
    }

    /**
     * Test the property 'platformReasoning'
     */
    @Test
    public void platformReasoningTest() {
        // TODO: test platformReasoning
    }

    /**
     * Test the property 'arbitrationBy'
     */
    @Test
    public void arbitrationByTest() {
        // TODO: test arbitrationBy
    }

    /**
     * Test the property 'parcels'
     */
    @Test
    public void parcelsTest() {
        // TODO: test parcels
    }

    /**
     * Test the property 'views'
     */
    @Test
    public void viewsTest() {
        // TODO: test views
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'viewCount'
     */
    @Test
    public void viewCountTest() {
        // TODO: test viewCount
    }

    /**
     * Test the property 'statusExpiration'
     */
    @Test
    public void statusExpirationTest() {
        // TODO: test statusExpiration
    }

    /**
     * Test the property 'awaitedParty'
     */
    @Test
    public void awaitedPartyTest() {
        // TODO: test awaitedParty
    }

    /**
     * Test the property 'iri'
     */
    @Test
    public void iriTest() {
        // TODO: test iri
    }

    /**
     * Test the property 'messageCount'
     */
    @Test
    public void messageCountTest() {
        // TODO: test messageCount
    }

    /**
     * Test the property 'closedInFavorOf'
     */
    @Test
    public void closedInFavorOfTest() {
        // TODO: test closedInFavorOf
    }

    /**
     * Test the property 'disbursedByBuyer'
     */
    @Test
    public void disbursedByBuyerTest() {
        // TODO: test disbursedByBuyer
    }

    /**
     * Test the property 'maxRefundableForBuyer'
     */
    @Test
    public void maxRefundableForBuyerTest() {
        // TODO: test maxRefundableForBuyer
    }

}
